{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding\\\\Quiz Generator Project\\\\Client\\\\online-quiz-system\\\\src\\\\components\\\\question-edit-modal\\\\QuestionEditModal.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./question-edit-modal.css\";\nimport { React, useState, useEffect, useRef } from 'react';\nimport { Form, Button, Modal, Row, Col } from \"react-bootstrap\";\nimport { Cancel, PermMedia } from \"@material-ui/icons\";\nimport { Chip, Paper } from '@material-ui/core';\nimport storage from './../../firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction QuestionEditModal(props) {\n  _s();\n\n  const [question, setQuestion] = useState(\"\");\n  const [questionType, setQuestionType] = useState(0);\n  const [numberOfChoices, setNumberOfChoices] = useState(0);\n  const [numberOfChoicesError, setNumberOfChoicesError] = useState(\"\");\n  const [keys, setKeys] = useState([]);\n  const [keyCorrects, setKeyCorrects] = useState([]);\n  const [keyImages, setKeyImages] = useState([]);\n  const [keyImageUrl, setKeyImageUrl] = useState([]);\n  const [keyType1Choices, setKeyType1Choices] = useState([]);\n  const [type1CurrentInput, setType1CurrentInput] = useState(\"\");\n  const [explain, setExplain] = useState(\"\");\n  const [file, setFile] = useState(null);\n  const [url, setURL] = useState(\"\"); //This only be used in case of passing a Firebase URL from QuizCreate\n\n  const [time, setTime] = useState(\"\");\n  const [point, setPoint] = useState(\"\");\n  const [validateError, setValidateError] = useState(\"\");\n  const keyImageURLs = useRef();\n  const imageURL = useRef();\n  const [renderBool, setRenderBool] = useState(false);\n\n  const check = () => {\n    //Count target\n    let getCount = 0;\n\n    for (let i = 0; i < keyImages.length; i++) {\n      if (keyImages[i]) getCount++;\n    }\n\n    if (file) getCount++;\n    let count = 0;\n\n    if (imageURL.current !== \"\" && file) {\n      count++;\n    }\n\n    for (let i = 0; i < keyImageURLs.current.length; i++) {\n      if (keyImageURLs.current[i] !== \"\") {\n        count++;\n      }\n    }\n\n    if (count === getCount && getCount > 0) {\n      callParentSubmit();\n    }\n  };\n\n  const handleQuestionTypeChange = type => {\n    setQuestionType(type);\n\n    if (type === 1) {\n      setNumberOfChoices(1);\n      setNumberOfChoicesError(\"\");\n      setKeyCorrects([true]);\n      setKeys([\"\"]);\n      setKeyImages([\"\"]);\n      setKeyImageUrl([\"\"]);\n      keyImageURLs.current = [\"\"];\n    } else {\n      setNumberOfChoices(0);\n      setKeyCorrects([]);\n      setKeys([]);\n      setKeyImages([]);\n      setKeyImageUrl([]);\n      keyImageURLs.current = [];\n    }\n  };\n\n  const handleChoicesCountChange = count => {\n    if (count < 2 || count > 5) {\n      setNumberOfChoicesError(\"Số lượng phương án phải từ 2 đến 5.\");\n    } else {\n      setNumberOfChoices(count);\n      setNumberOfChoicesError(\"\");\n      let tmpKeysArr = [];\n      let tmpKeysCorrectArr = [];\n      let tmpKeyImages = [];\n      let tmpKeyImagesURLs = [];\n\n      for (let i = 0; i < count; i++) {\n        tmpKeysArr.push(\"\");\n        tmpKeysCorrectArr.push(false);\n        tmpKeyImages.push(null);\n        tmpKeyImagesURLs.push(\"\");\n      }\n\n      setKeyCorrects(tmpKeysCorrectArr);\n      setKeys(tmpKeysArr);\n      setKeyImages(tmpKeyImages);\n      setKeyImageUrl(tmpKeyImagesURLs);\n      keyImageURLs.current = tmpKeyImagesURLs;\n    }\n  };\n\n  const handleCorrectKeyChange = index => {\n    let getKeyCorrectArr = [];\n\n    for (let i = 0; i < keyCorrects.length; i++) {\n      getKeyCorrectArr.push(false);\n    }\n\n    let item = getKeyCorrectArr[index];\n    getKeyCorrectArr[index] = !item;\n    setKeyCorrects(getKeyCorrectArr);\n  };\n\n  const handleKeyChange = (index, value) => {\n    let emptyArr = [];\n\n    for (let i = 0; i < keys.length; i++) {\n      if (i === index) {\n        emptyArr.push(value);\n      } else {\n        emptyArr.push(keys[i]);\n      }\n    }\n\n    setKeys(emptyArr);\n  };\n\n  const handleKeyImage = (index, file) => {\n    let emptyArr = [];\n\n    for (let i = 0; i < keyImages.length; i++) {\n      if (i === index) {\n        emptyArr.push(file);\n      } else {\n        emptyArr.push(keyImages[i]);\n      }\n    }\n\n    setKeyImages(emptyArr);\n    console.log(keyImages);\n  };\n\n  const setImageNull = i => {\n    let emptyArr = [...keyImages];\n    emptyArr[i] = null;\n    let emptyArr1 = [...keyImageUrl];\n    emptyArr1[i] = \"\";\n    setKeyImages(emptyArr);\n    setKeyImageUrl(emptyArr1);\n  };\n\n  const prepareFormSubmit = async e => {\n    e.preventDefault();\n    console.log(keys); //Validate info\n\n    if (question === \"\") {\n      setValidateError(\"Vui lòng nhập nội dung câu hỏi.\");\n      return;\n    }\n\n    if (questionType === 0) {\n      if (!keyCorrects.includes(true)) {\n        setValidateError(\"Vui lòng chọn 1 đáp án đúng.\");\n        return;\n      }\n\n      for (let i = 0; i < keys.length; i++) {\n        if (keys[i] === \"\" && !keyImages[i]) {\n          setValidateError(\"Phương án không hợp lệ.\");\n          return;\n        }\n      }\n    } else if (questionType === 1) {\n      if (keyType1Choices.length === 0) {\n        setValidateError(\"Vui lòng nhập ít nhất 1 đáp án cho câu hỏi.\");\n        return;\n      }\n    }\n\n    if (!props.useQuizTime && isNaN(parseInt(time))) {\n      setValidateError(\"Thời gian trả lời không hợp lệ.\");\n      return;\n    } else if (isNaN(parseInt(point))) {\n      setValidateError(\"Điểm số câu không hợp lệ.\");\n      return;\n    }\n\n    let getCount = 0;\n\n    for (let i = 0; i < keyImages.length; i++) {\n      if (keyImages[i]) getCount++;\n    }\n\n    if (file) getCount++; //Upload to firebase and retrieve URL \n\n    if (getCount != 0) {\n      if (file) {\n        let fileName = file.name + \"-\" + Date.now(); //questions_images\n\n        storage.ref(`questions_images/${fileName}`).put(file).on(\"state_changed\", snapshot => {}, error => {\n          console.log(error);\n        }, () => {\n          storage.ref(`questions_images/`).child(`${fileName}`).getDownloadURL().then(url => {\n            imageURL.current = url;\n            check();\n          }, error => {\n            console.log(error);\n          });\n        });\n      }\n\n      for (let i = 0; i < keyImages.length; i++) {\n        if (keyImages[i]) {\n          let keyFileName = keyImages[i].name + \"-\" + Date.now(); //questions_images\n\n          storage.ref(`questions_images/${keyFileName}`).put(keyImages[i]).on(\"state_changed\", snapshot => {}, error => {\n            console.log(error);\n          }, () => {\n            storage.ref(`questions_images/`).child(`${keyFileName}`).getDownloadURL().then(url => {\n              setImageURL(i, url);\n            }, error => {\n              console.log(error);\n            });\n          });\n        }\n      }\n    } else {\n      callParentSubmit();\n    }\n  };\n\n  const setImageURL = (index, path) => {\n    // let arrays = [...keyImagesURLs];\n    // arrays[index] = path;\n    // setKeyImagesURLs(arrays);\n    let getArray = keyImageURLs.current;\n    getArray[index] = path;\n    keyImageURLs.current = getArray;\n    check();\n  };\n\n  const callParentSubmit = () => {\n    let output = {};\n    output[\"question\"] = question;\n    output[\"questionType\"] = questionType;\n    output[\"numberOfChoices\"] = numberOfChoices;\n    output[\"keyCorrects\"] = keyCorrects;\n    output[\"explain\"] = explain;\n    output[\"time\"] = time === \"\" ? 0 : parseInt(time);\n    output[\"point\"] = point;\n    output[\"image\"] = imageURL.current;\n    output[\"keyImages\"] = keyImageURLs.current;\n    output[\"questIndex\"] = props.questionEditGet[\"questIndex\"];\n\n    if (questionType === 0) {\n      output[\"keys\"] = keys;\n    } else {\n      output[\"keys\"] = [\"\"];\n\n      for (let i = 0; i < keyType1Choices.length - 1; i++) {\n        output[\"keys\"][0] += keyType1Choices[i] + \"~>\";\n      }\n\n      output[\"keys\"][0] += keyType1Choices[keyType1Choices.length - 1];\n    } //Refresh\n\n\n    setValidateError(\"\");\n    setQuestion(\"\");\n    setQuestionType(0);\n    setNumberOfChoicesError(\"\");\n    setNumberOfChoices(0);\n    setKeys([]);\n    setKeyCorrects([]);\n    setExplain(\"\");\n    setFile(null);\n    setTime(\"\");\n    setPoint(\"\");\n    keyImageURLs.current = [];\n    imageURL.current = \"\";\n    setKeyImages([]);\n    setKeyImageUrl([]);\n    setKeyType1Choices([]);\n    setType1CurrentInput(\"\");\n    props.onEditQuestionSubmit(output);\n  };\n\n  const keyBoxKeyDown = e => {\n    if (e.key == \"Enter\") {\n      e.preventDefault();\n      setKeyType1Choices([...keyType1Choices, e.target.value]);\n      setType1CurrentInput(\"\");\n    }\n  };\n\n  const deleteKeyType1Choice = index => {\n    let cloneArray = [...keyType1Choices];\n    cloneArray.splice(index, 1);\n    setKeyType1Choices(cloneArray);\n  };\n\n  useEffect(() => {\n    if (props.questionEditGet) {\n      setQuestion(props.questionEditGet[\"question\"]);\n      setQuestionType(props.questionEditGet[\"questionType\"]);\n      setNumberOfChoices(props.questionEditGet[\"keys\"].length);\n      setKeys(props.questionEditGet[\"keys\"]);\n      setKeyCorrects(props.questionEditGet[\"keyCorrects\"]);\n      setTime(props.questionEditGet[\"time\"]);\n      setExplain(props.questionEditGet[\"explain\"]);\n      setURL(props.questionEditGet[\"image\"]);\n      keyImageURLs.current = [];\n      imageURL.current = \"\";\n      setPoint(props.questionEditGet[\"point\"]);\n      setKeyImageUrl(props.questionEditGet[\"keyImages\"]);\n      setType1CurrentInput(\"\");\n\n      if (props.questionEditGet[\"questionType\"] === 1) {\n        setKeyType1Choices(props.questionEditGet[\"keys\"][0].split(\"~>\"));\n      }\n\n      let emptyArr = [];\n\n      for (let i = 0; i < props.questionEditGet[\"keys\"].length; i++) {\n        emptyArr.push(null);\n      }\n\n      setKeyImages(emptyArr);\n      if (props.questionEditGet[\"question\"] !== \"\") setRenderBool(true);\n    }\n  }, []);\n  return renderBool && /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Aloha\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 339,\n    columnNumber: 23\n  }, this);\n}\n\n_s(QuestionEditModal, \"cJzVfiM3w9m/c35n5tmvY/KeyOw=\");\n\n_c = QuestionEditModal;\nexport default QuestionEditModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionEditModal\");","map":{"version":3,"sources":["D:/Coding/Quiz Generator Project/Client/online-quiz-system/src/components/question-edit-modal/QuestionEditModal.jsx"],"names":["React","useState","useEffect","useRef","Form","Button","Modal","Row","Col","Cancel","PermMedia","Chip","Paper","storage","QuestionEditModal","props","question","setQuestion","questionType","setQuestionType","numberOfChoices","setNumberOfChoices","numberOfChoicesError","setNumberOfChoicesError","keys","setKeys","keyCorrects","setKeyCorrects","keyImages","setKeyImages","keyImageUrl","setKeyImageUrl","keyType1Choices","setKeyType1Choices","type1CurrentInput","setType1CurrentInput","explain","setExplain","file","setFile","url","setURL","time","setTime","point","setPoint","validateError","setValidateError","keyImageURLs","imageURL","renderBool","setRenderBool","check","getCount","i","length","count","current","callParentSubmit","handleQuestionTypeChange","type","handleChoicesCountChange","tmpKeysArr","tmpKeysCorrectArr","tmpKeyImages","tmpKeyImagesURLs","push","handleCorrectKeyChange","index","getKeyCorrectArr","item","handleKeyChange","value","emptyArr","handleKeyImage","console","log","setImageNull","emptyArr1","prepareFormSubmit","e","preventDefault","includes","useQuizTime","isNaN","parseInt","fileName","name","Date","now","ref","put","on","snapshot","error","child","getDownloadURL","then","keyFileName","setImageURL","path","getArray","output","questionEditGet","onEditQuestionSubmit","keyBoxKeyDown","key","target","deleteKeyType1Choice","cloneArray","splice","split"],"mappings":"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","sourcesContent":["import \"./question-edit-modal.css\";\r\nimport {React, useState, useEffect, useRef} from 'react'\r\nimport {Form, Button, Modal, Row, Col} from \"react-bootstrap\";\r\nimport {Cancel, PermMedia} from \"@material-ui/icons\";\r\nimport {Chip, Paper} from '@material-ui/core';\r\nimport storage from './../../firebase';\r\n\r\nfunction QuestionEditModal(props) {\r\n    const [question, setQuestion] = useState(\"\");\r\n    const [questionType, setQuestionType] = useState(0);\r\n    const [numberOfChoices, setNumberOfChoices] = useState(0);\r\n    const [numberOfChoicesError, setNumberOfChoicesError] = useState(\"\");\r\n    const [keys, setKeys] = useState([]);\r\n    const [keyCorrects, setKeyCorrects] = useState([]);\r\n    const [keyImages, setKeyImages] = useState([]);\r\n    const [keyImageUrl, setKeyImageUrl] = useState([]);\r\n    const [keyType1Choices, setKeyType1Choices] = useState([]);\r\n    const [type1CurrentInput, setType1CurrentInput] = useState(\"\");\r\n    const [explain, setExplain] = useState(\"\");\r\n    const [file, setFile] = useState(null);\r\n    const [url, setURL] = useState(\"\"); //This only be used in case of passing a Firebase URL from QuizCreate\r\n    const [time, setTime] = useState(\"\");\r\n    const [point, setPoint] = useState(\"\");\r\n    const [validateError, setValidateError] = useState(\"\");\r\n    const keyImageURLs = useRef();\r\n    const imageURL = useRef(); \r\n    const [renderBool, setRenderBool] = useState(false);\r\n\r\n    const check = () => {\r\n        //Count target\r\n        let getCount = 0;\r\n        for (let i = 0; i < keyImages.length; i++) {\r\n            if (keyImages[i])\r\n                getCount++;\r\n        }\r\n        if (file)\r\n            getCount++;\r\n\r\n        let count = 0;\r\n        if (imageURL.current !== \"\" && file)\r\n        {\r\n            count++;\r\n        }\r\n        for (let i = 0; i < keyImageURLs.current.length; i++) {\r\n            if (keyImageURLs.current[i] !== \"\")\r\n            {\r\n                count++;\r\n            }\r\n        }\r\n\r\n        if (count === getCount && getCount > 0) {\r\n            callParentSubmit();\r\n        }\r\n    }\r\n\r\n    const handleQuestionTypeChange = (type) => {\r\n        setQuestionType(type);\r\n        if (type === 1) \r\n        {\r\n            setNumberOfChoices(1);\r\n            setNumberOfChoicesError(\"\");\r\n            setKeyCorrects([true]);\r\n            setKeys([\"\"]);\r\n            setKeyImages([\"\"]);\r\n            setKeyImageUrl([\"\"]);\r\n            keyImageURLs.current = [\"\"];\r\n        } else {\r\n            setNumberOfChoices(0);\r\n            setKeyCorrects([]);\r\n            setKeys([]);\r\n            setKeyImages([]);\r\n            setKeyImageUrl([]);\r\n            keyImageURLs.current = [];\r\n        }\r\n    }\r\n\r\n    const handleChoicesCountChange = (count) => {\r\n        if (count < 2 || count > 5) {\r\n            setNumberOfChoicesError(\"Số lượng phương án phải từ 2 đến 5.\");\r\n        } else {\r\n            setNumberOfChoices(count);\r\n            setNumberOfChoicesError(\"\");\r\n            let tmpKeysArr = []\r\n            let tmpKeysCorrectArr = [] \r\n            let tmpKeyImages = [];\r\n            let tmpKeyImagesURLs = [];\r\n            for (let i = 0; i < count; i++) {\r\n                tmpKeysArr.push(\"\");\r\n                tmpKeysCorrectArr.push(false);\r\n                tmpKeyImages.push(null);\r\n                tmpKeyImagesURLs.push(\"\");\r\n            }\r\n            setKeyCorrects(tmpKeysCorrectArr);\r\n            setKeys(tmpKeysArr);\r\n            setKeyImages(tmpKeyImages);\r\n            setKeyImageUrl(tmpKeyImagesURLs);\r\n            keyImageURLs.current = tmpKeyImagesURLs;\r\n        }\r\n    }\r\n\r\n    const handleCorrectKeyChange = (index) => {\r\n        let getKeyCorrectArr = [];\r\n        for (let i = 0; i < keyCorrects.length; i++) {\r\n            getKeyCorrectArr.push(false);\r\n        }\r\n        let item = getKeyCorrectArr[index];\r\n        getKeyCorrectArr[index] = !item;\r\n        setKeyCorrects(getKeyCorrectArr);\r\n    }\r\n\r\n    const handleKeyChange = (index, value) => {\r\n        let emptyArr = [];\r\n        for (let i = 0; i < keys.length; i++) {\r\n            if (i === index) {\r\n                emptyArr.push(value);\r\n            } else {\r\n                emptyArr.push(keys[i]);\r\n            }\r\n        }\r\n        setKeys(emptyArr);\r\n    }\r\n\r\n    const handleKeyImage = (index, file) => {\r\n        let emptyArr = [];\r\n        for (let i = 0; i < keyImages.length; i++) {\r\n            if (i === index) {\r\n                emptyArr.push(file);\r\n            } else {\r\n                emptyArr.push(keyImages[i]);\r\n            }\r\n        }\r\n        setKeyImages(emptyArr);\r\n        console.log(keyImages);\r\n    }\r\n\r\n    const setImageNull = (i) => {\r\n        let emptyArr = [...keyImages];\r\n        emptyArr[i] = null;\r\n        let emptyArr1 = [...keyImageUrl];\r\n        emptyArr1[i] = \"\";\r\n        setKeyImages(emptyArr);\r\n        setKeyImageUrl(emptyArr1);\r\n    }\r\n\r\n    const prepareFormSubmit = async(e) => {\r\n        e.preventDefault();\r\n        console.log(keys);\r\n\r\n        //Validate info\r\n        if (question === \"\") {\r\n            setValidateError(\"Vui lòng nhập nội dung câu hỏi.\");\r\n            return;\r\n        } \r\n        \r\n        if (questionType === 0) {\r\n            if (!keyCorrects.includes(true)) {\r\n                setValidateError(\"Vui lòng chọn 1 đáp án đúng.\");\r\n                return;\r\n            }\r\n            for (let i = 0; i < keys.length; i++) {\r\n                if (keys[i] === \"\" && !keyImages[i]) {\r\n                    setValidateError(\"Phương án không hợp lệ.\");\r\n                    return;\r\n                }\r\n            }\r\n        } else if (questionType === 1) {\r\n            if (keyType1Choices.length === 0) {\r\n                setValidateError(\"Vui lòng nhập ít nhất 1 đáp án cho câu hỏi.\");\r\n                return;\r\n            }\r\n        }\r\n        \r\n        if (!props.useQuizTime && isNaN(parseInt(time))) {\r\n            setValidateError(\"Thời gian trả lời không hợp lệ.\");\r\n            return;\r\n        } else if (isNaN(parseInt(point))) {\r\n            setValidateError(\"Điểm số câu không hợp lệ.\");\r\n            return;\r\n        }\r\n\r\n        let getCount = 0;\r\n        for (let i = 0; i < keyImages.length; i++) {\r\n            if (keyImages[i])\r\n                getCount++;\r\n        }\r\n        if (file)\r\n            getCount++;\r\n\r\n        //Upload to firebase and retrieve URL \r\n        if (getCount != 0) {\r\n            if (file) {\r\n                let fileName = file.name + \"-\" + Date.now();\r\n                //questions_images\r\n                storage.ref(`questions_images/${fileName}`).put(file)\r\n                .on(\"state_changed\", (snapshot) => {}, \r\n                (error) => {console.log(error)}, \r\n                () => {\r\n                    storage.ref(`questions_images/`).child(`${fileName}`).getDownloadURL()\r\n                    .then(\r\n                        (url) => {\r\n                            imageURL.current = url;\r\n                            check();\r\n                        },\r\n                        (error) => {\r\n                            console.log(error);\r\n                        }\r\n                    );\r\n                });\r\n            }\r\n\r\n            for (let i = 0; i < keyImages.length; i++) {\r\n                if (keyImages[i]) {\r\n                    let keyFileName = keyImages[i].name + \"-\" + Date.now();\r\n                    //questions_images\r\n                    storage.ref(`questions_images/${keyFileName}`).put(keyImages[i])\r\n                    .on(\"state_changed\", (snapshot) => {}, \r\n                    (error) => {console.log(error)}, \r\n                    () => {\r\n                        storage.ref(`questions_images/`).child(`${keyFileName}`).getDownloadURL()\r\n                        .then(\r\n                            (url) => {\r\n                                setImageURL(i, url);  \r\n                            },\r\n                            (error) => {\r\n                                console.log(error);\r\n                            }\r\n                        );\r\n                    });\r\n                }\r\n            }\r\n        } else {\r\n            callParentSubmit();\r\n        }\r\n    }\r\n\r\n    const setImageURL = (index, path) => {\r\n        // let arrays = [...keyImagesURLs];\r\n        // arrays[index] = path;\r\n        // setKeyImagesURLs(arrays);\r\n\r\n        let getArray = keyImageURLs.current;\r\n        getArray[index] = path;\r\n        keyImageURLs.current = getArray;\r\n        check();\r\n    }\r\n\r\n    const callParentSubmit = () => {\r\n        let output = {};\r\n        output[\"question\"] = question;\r\n        output[\"questionType\"] = questionType;\r\n        output[\"numberOfChoices\"] = numberOfChoices;\r\n        output[\"keyCorrects\"] = keyCorrects;\r\n        output[\"explain\"] = explain;\r\n        output[\"time\"] = time === \"\"? 0 : parseInt(time);\r\n        output[\"point\"] = point;\r\n        output[\"image\"] = imageURL.current;\r\n        output[\"keyImages\"] = keyImageURLs.current;\r\n        output[\"questIndex\"] = props.questionEditGet[\"questIndex\"];\r\n\r\n        if (questionType === 0) {\r\n            output[\"keys\"] = keys;\r\n        } else {\r\n            output[\"keys\"] = [\"\"];\r\n            \r\n            for (let i = 0; i < keyType1Choices.length - 1; i++) {\r\n                output[\"keys\"][0] += keyType1Choices[i] + \"~>\";\r\n            }\r\n            output[\"keys\"][0] += keyType1Choices[keyType1Choices.length - 1];\r\n        }\r\n\r\n        //Refresh\r\n        setValidateError(\"\");\r\n        setQuestion(\"\");\r\n        setQuestionType(0);\r\n        setNumberOfChoicesError(\"\");\r\n        setNumberOfChoices(0);\r\n        setKeys([]);\r\n        setKeyCorrects([]);\r\n        setExplain(\"\");\r\n        setFile(null);\r\n        setTime(\"\");\r\n        setPoint(\"\");\r\n        keyImageURLs.current = [];\r\n        imageURL.current = \"\";\r\n        setKeyImages([]);\r\n        setKeyImageUrl([]);\r\n        setKeyType1Choices([]);\r\n        setType1CurrentInput(\"\");\r\n\r\n        props.onEditQuestionSubmit(output);\r\n    }\r\n\r\n    const keyBoxKeyDown = (e) => {\r\n        if (e.key == \"Enter\") {\r\n            e.preventDefault();\r\n            setKeyType1Choices([...keyType1Choices, e.target.value]);\r\n            setType1CurrentInput(\"\");\r\n        }\r\n    }\r\n\r\n    const deleteKeyType1Choice = (index) => {\r\n        let cloneArray = [...keyType1Choices];\r\n        cloneArray.splice(index, 1);\r\n        setKeyType1Choices(cloneArray);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (props.questionEditGet) {\r\n            setQuestion(props.questionEditGet[\"question\"]);\r\n            setQuestionType(props.questionEditGet[\"questionType\"]);\r\n            setNumberOfChoices(props.questionEditGet[\"keys\"].length);\r\n            setKeys(props.questionEditGet[\"keys\"]);\r\n            setKeyCorrects(props.questionEditGet[\"keyCorrects\"]);\r\n            setTime(props.questionEditGet[\"time\"]);\r\n            setExplain(props.questionEditGet[\"explain\"]);\r\n            setURL(props.questionEditGet[\"image\"]);\r\n            keyImageURLs.current = [];\r\n            imageURL.current = \"\";\r\n            setPoint(props.questionEditGet[\"point\"]);\r\n            setKeyImageUrl(props.questionEditGet[\"keyImages\"]);\r\n            setType1CurrentInput(\"\");\r\n            if (props.questionEditGet[\"questionType\"] === 1) {\r\n                setKeyType1Choices(props.questionEditGet[\"keys\"][0].split(\"~>\"))\r\n            }\r\n\r\n            let emptyArr = [];\r\n            for (let i = 0; i < props.questionEditGet[\"keys\"].length; i++) {\r\n                emptyArr.push(null);\r\n            }\r\n\r\n            setKeyImages(emptyArr);\r\n\r\n            if (props.questionEditGet[\"question\"] !== \"\")\r\n            setRenderBool(true);\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        renderBool && <div>Aloha</div>\r\n    )\r\n}\r\n\r\nexport default QuestionEditModal\r\n"]},"metadata":{},"sourceType":"module"}