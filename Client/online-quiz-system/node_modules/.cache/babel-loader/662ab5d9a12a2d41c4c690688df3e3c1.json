{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding\\\\Online Quiz System\\\\online-quiz-system\\\\Client\\\\online-quiz-system\\\\src\\\\components\\\\quiz-review\\\\QuizReview.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./quiz-review.css\";\nimport { React, useState, useEffect, useRef } from 'react';\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction QuizReview(props) {\n  _s();\n\n  const [markContent, setMarkContent] = useState([]);\n  const [questions, setQuestions] = useState([]);\n  const [quizInfo, setQuizInfo] = useState([]);\n  useEffect(() => {\n    setMarkContent(props.reviewContent);\n    setQuestions(props.questions);\n    setQuizInfo(props.quizInfo);\n  }, []);\n  useEffect(() => {\n    console.log(markContent);\n  }, [markContent]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"mt-3 mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center\",\n        children: quizInfo.quiz_title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-center\",\n        children: [\"T\\u1EA1o b\\u1EDFi: \", quizInfo.creator]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), questions.map((i, question) => {\n        /*#__PURE__*/\n        _jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-box d-flex justify-content-center align-items-center\",\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"txt-quest\",\n              children: question.question_content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this), question.media != \"\" && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center mt-2\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"img-quest\",\n              src: question.media\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 50\n          }, this), question.question_type == 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n              value: answers[i].answer,\n              disabled: \"true\",\n              type: \"text\",\n              className: \"mt-2\",\n              placeholder: \"C\\xE2u tr\\u1EA3 l\\u1EDDi\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center mt-1\",\n              children: [questions[currentQuest - 1].answers.length == 1 && /*#__PURE__*/_jsxDEV(\"h5\", {\n                children: [\"\\u0110\\xE1p \\xE1n: \", answerDisplay]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                children: Buffer(questions[currentQuest - 1].explanation, \"base64\").toString(\"utf-8\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this), question.question_type == 0 && /*#__PURE__*/_jsxDEV(Row, {\n            className: \"mt-2\",\n            children: question.answers.map((answer, j) => {\n              let chosen = \"\";\n\n              if (answer.id !== answers[i].answer) {\n                if (answer.is_correct === 1) {\n                  chosen = \"answer-content text-center correct\";\n                } else {\n                  chosen = \"answer-content text-center\";\n                }\n              } else {\n                if (answer.is_correct === 1) {\n                  chosen = \"answer-content text-center correct\";\n                } else {\n                  chosen = \"answer-content text-center wrong\";\n                }\n              }\n\n              return /*#__PURE__*/_jsxDEV(Col, {\n                lg: 6,\n                md: 6,\n                sm: 12,\n                className: \"p-1 answer\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: chosen,\n                  children: [answer.media != \"\" && /*#__PURE__*/_jsxDEV(\"img\", {\n                    className: \"img-answer\",\n                    src: answer.media\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 67,\n                    columnNumber: 76\n                  }, this), Buffer(answer.answer_content, \"base64\").toString(\"utf-8\")]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 45\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(QuizReview, \"KrFfFd/RK5vLds02GsbwAZvJxJY=\");\n\n_c = QuizReview;\nexport default QuizReview;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuizReview\");","map":{"version":3,"sources":["D:/Coding/Online Quiz System/online-quiz-system/Client/online-quiz-system/src/components/quiz-review/QuizReview.jsx"],"names":["React","useState","useEffect","useRef","Container","Row","Col","QuizReview","props","markContent","setMarkContent","questions","setQuestions","quizInfo","setQuizInfo","reviewContent","console","log","quiz_title","creator","map","i","question","question_content","media","question_type","answers","answer","currentQuest","length","answerDisplay","Buffer","explanation","toString","j","chosen","id","is_correct","answer_content"],"mappings":"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","sourcesContent":["import \"./quiz-review.css\";\r\nimport {React, useState, useEffect, useRef} from 'react'\r\nimport {Container, Row, Col} from \"react-bootstrap\";\r\n\r\nfunction QuizReview(props) {\r\n    const [markContent, setMarkContent] = useState([]);\r\n    const [questions, setQuestions] = useState([]);\r\n    const [quizInfo, setQuizInfo] = useState([]);\r\n\r\n    useEffect(() => {\r\n        setMarkContent(props.reviewContent);\r\n        setQuestions(props.questions);\r\n        setQuizInfo(props.quizInfo);\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        console.log(markContent);\r\n    }, [markContent])\r\n\r\n    return (\r\n        <>\r\n            <Container className=\"mt-3 mb-3\">\r\n                <h1 className=\"text-center\">{quizInfo.quiz_title}</h1>\r\n                <h3 className=\"text-center\">Tạo bởi: {quizInfo.creator}</h3>\r\n                {questions.map((i, question) => {\r\n                    <>\r\n                        <div className=\"question-box d-flex justify-content-center align-items-center\">\r\n                            <h5 className=\"txt-quest\">{question.question_content}</h5>\r\n                        </div>\r\n                        {question.media != \"\" && <div className=\"text-center mt-2\">\r\n                            <img className=\"img-quest\" src={question.media}></img>\r\n                        </div>}\r\n                        {question.question_type == 1 && \r\n                        <div>\r\n                            <Form.Control value={answers[i].answer} disabled=\"true\" type=\"text\" className=\"mt-2\" placeholder=\"Câu trả lời\">\r\n                            </Form.Control>\r\n                            <div className=\"text-center mt-1\">\r\n                                {\r\n                                    questions[currentQuest - 1].answers.length == 1 && (\r\n                                        <h5>Đáp án: {answerDisplay}</h5>\r\n                                    )\r\n                                }\r\n                                <h5>{Buffer(questions[currentQuest - 1].explanation, \"base64\").toString(\"utf-8\")}</h5>\r\n                            </div>\r\n                        </div>}\r\n                        {question.question_type == 0 && \r\n                            <Row className=\"mt-2\">\r\n                                {\r\n                                    question.answers.map((answer, j) => {\r\n                                        let chosen = \"\";\r\n                                        if (answer.id !== answers[i].answer) {\r\n                                            if (answer.is_correct === 1) {\r\n                                                chosen = \"answer-content text-center correct\";\r\n                                            } else {\r\n                                                chosen = \"answer-content text-center\";\r\n                                            }\r\n                                        } else {\r\n                                            if (answer.is_correct === 1) {\r\n                                                chosen = \"answer-content text-center correct\";\r\n                                            } else {\r\n                                                chosen = \"answer-content text-center wrong\";\r\n                                            }\r\n                                        }\r\n                                        return (\r\n                                            <Col lg={6} md={6} sm={12} className=\"p-1 answer\">\r\n                                                <div className={chosen}>\r\n                                                    {answer.media != \"\" && <img className=\"img-answer\" src={answer.media}></img>}\r\n                                                    {Buffer(answer.answer_content, \"base64\").toString(\"utf-8\")}\r\n                                                </div>\r\n                                            </Col>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </Row>\r\n                        }\r\n                    </>\r\n                })\r\n                }\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default QuizReview\r\n"]},"metadata":{},"sourceType":"module"}