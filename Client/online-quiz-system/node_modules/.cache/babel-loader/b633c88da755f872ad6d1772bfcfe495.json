{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding\\\\Quiz Generator Project\\\\Client\\\\online-quiz-system\\\\src\\\\pages\\\\quiz-main\\\\QuizMain.jsx\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect, useContext } from 'react';\nimport \"./quizmain.css\";\nimport axios from \"axios\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport { useParams } from \"react-router-dom\";\nimport { Row, Col, Container, Card, Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction QuizMain() {\n  _s();\n\n  let {\n    id\n  } = useParams();\n  const {\n    user\n  } = useContext(AuthContext);\n  const [questions, setQuestions] = useState([]);\n  const [quizInfo, setQuizInfo] = useState([]);\n  const [point, setPoint] = useState(0);\n  const [currentQuest, setCurrentQuest] = useState(0);\n\n  const shuffleArray = array => {\n    for (var i = array.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      var temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n\n    return array;\n  };\n\n  const getQuestions = async () => {};\n\n  const getQuizInfo = async () => {\n    let quizInfo = await axios.get(`/quiz/info/${id}`);\n    quizInfo = JSON.parse(quizInfo.request.response);\n    setQuizInfo(quizInfo[0]);\n    let listOfQuestions = await axios.get(`/quiz/join/${id}`);\n    listOfQuestions = JSON.parse(listOfQuestions.request.response);\n\n    if (quizInfo[\"raw_order\"] == 0) {\n      listOfQuestions = shuffleArray(listOfQuestions);\n    }\n\n    setQuestions(listOfQuestions);\n  };\n\n  useEffect(() => {\n    if (quizInfo.length == 0) {\n      getQuizInfo();\n      getQuestions();\n    }\n  }, []);\n  useEffect(() => {\n    console.log(questions);\n    console.log(quizInfo);\n  }, [questions, quizInfo]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [questions.length == 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading Questions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 40\n    }, this), questions.length != 0 && /*#__PURE__*/_jsxDEV(Container, {\n      className: \"mt-3 mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center\",\n        children: quizInfo.quiz_title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          lg: 4,\n          md: 12,\n          sm: 12,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-center\",\n            children: [\"User: \", user.username]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          lg: 4,\n          md: 6,\n          sm: 12,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Current Quest: \", currentQuest, \"/\", questions.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          lg: 4,\n          md: 6,\n          sm: 12,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Point: \", point]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n\n_s(QuizMain, \"JmzMp8xdKw9uirWXdHk6o1oCE90=\", false, function () {\n  return [useParams];\n});\n\n_c = QuizMain;\nexport default QuizMain;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuizMain\");","map":{"version":3,"sources":["D:/Coding/Quiz Generator Project/Client/online-quiz-system/src/pages/quiz-main/QuizMain.jsx"],"names":["React","useState","useEffect","useContext","axios","AuthContext","useParams","Row","Col","Container","Card","Button","QuizMain","id","user","questions","setQuestions","quizInfo","setQuizInfo","point","setPoint","currentQuest","setCurrentQuest","shuffleArray","array","i","length","j","Math","floor","random","temp","getQuestions","getQuizInfo","get","JSON","parse","request","response","listOfQuestions","console","log","quiz_title","username"],"mappings":"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","sourcesContent":["import {React, useState, useEffect, useContext} from 'react'\r\nimport \"./quizmain.css\";\r\nimport axios from \"axios\";\r\nimport {AuthContext} from \"../../context/AuthContext\";\r\nimport {\r\n    useParams\r\n} from \"react-router-dom\";\r\nimport {Row, Col, Container, Card, Button} from \"react-bootstrap\";\r\n\r\nfunction QuizMain() {\r\n    let {id} = useParams();\r\n    const {user} = useContext(AuthContext);\r\n    const [questions, setQuestions] = useState([]);\r\n    const [quizInfo, setQuizInfo] = useState([]);\r\n    const [point, setPoint] = useState(0);\r\n    const [currentQuest, setCurrentQuest] = useState(0);\r\n\r\n    const shuffleArray = (array) => {\r\n        for (var i = array.length - 1; i > 0; i--) {\r\n            var j = Math.floor(Math.random() * (i + 1));\r\n            var temp = array[i];\r\n            array[i] = array[j];\r\n            array[j] = temp;\r\n        }\r\n        return array\r\n    }\r\n\r\n    const getQuestions = async() => {\r\n        \r\n    }\r\n\r\n    const getQuizInfo = async() => {\r\n        let quizInfo = await axios.get(`/quiz/info/${id}`);\r\n        quizInfo = JSON.parse(quizInfo.request.response);\r\n        setQuizInfo(quizInfo[0]);\r\n\r\n        let listOfQuestions = await axios.get(`/quiz/join/${id}`);\r\n        listOfQuestions = JSON.parse(listOfQuestions.request.response);\r\n        if (quizInfo[\"raw_order\"] == 0) {\r\n            listOfQuestions = shuffleArray(listOfQuestions);\r\n        }\r\n        setQuestions(listOfQuestions);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (quizInfo.length == 0) {\r\n            getQuizInfo();\r\n            getQuestions();\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        console.log(questions);\r\n        console.log(quizInfo);\r\n    }, [questions, quizInfo])\r\n\r\n    return (\r\n        <>\r\n            {questions.length == 0 && (<p>Loading Questions</p>)}\r\n            {questions.length != 0 && (\r\n                <Container className=\"mt-3 mb-3\">\r\n                    <h1 className=\"text-center\">{quizInfo.quiz_title}</h1>\r\n                    <Row className=\"\">\r\n                        <Col lg={4} md={12} sm={12}>\r\n                            <p className=\"text-center\">User: {user.username}</p>\r\n                        </Col>\r\n                        <Col lg={4} md={6} sm={12}>\r\n                            <p>Current Quest: {currentQuest}/{questions.length}</p>\r\n                        </Col>\r\n                        <Col lg={4} md={6} sm={12}>\r\n                            <p>Point: {point}</p>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default QuizMain\r\n"]},"metadata":{},"sourceType":"module"}