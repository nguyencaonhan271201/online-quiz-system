{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding\\\\Online Quiz System\\\\online-quiz-system\\\\Client\\\\online-quiz-system\\\\src\\\\components\\\\quiz-review\\\\QuizReview.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./quiz-review.css\";\nimport { React, useState, useEffect, useRef } from 'react';\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction QuizReview(props) {\n  _s();\n\n  const [markContent, setMarkContent] = useState([]);\n  const [questions, setQuestions] = useState([]);\n  const [quizInfo, setQuizInfo] = useState([]);\n  useEffect(() => {\n    setMarkContent(props.reviewContent);\n    setQuestions(props.questions);\n    setQuizInfo(props.quizInfo);\n  }, []);\n  useEffect(() => {\n    console.log(markContent);\n  }, [markContent]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"mt-3 mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center\",\n        children: quizInfo.quiz_title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-center\",\n        children: [\"T\\u1EA1o b\\u1EDFi: \", quizInfo.creator]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), currentQuest != 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-box d-flex justify-content-center align-items-center\",\n          children: /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"txt-quest\",\n            children: questions[currentQuest - 1].question_content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), questions[currentQuest - 1].media != \"\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center mt-2\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"img-quest\",\n            src: questions[currentQuest - 1].media\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 65\n        }, this), questions[currentQuest - 1].question_type == 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [!quizTime && /*#__PURE__*/_jsxDEV(Form.Control, {\n            value: currentAnswerField,\n            disabled: answerFieldClass,\n            type: \"text\",\n            className: \"mt-2\",\n            placeholder: \"C\\xE2u tr\\u1EA3 l\\u1EDDi\",\n            onKeyPress: e => checkAnswerText(e),\n            onChange: e => handleBoxChange(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 30\n          }, this), quizTime && /*#__PURE__*/_jsxDEV(Form.Control, {\n            value: answerBoxContent,\n            disabled: answerFieldClass,\n            type: \"text\",\n            className: \"mt-2\",\n            placeholder: \"C\\xE2u tr\\u1EA3 l\\u1EDDi\",\n            onKeyPress: e => checkAnswerText(e),\n            onChange: e => handleBoxChange(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), questions[currentQuest - 1].question_type == 0 && /*#__PURE__*/_jsxDEV(Row, {\n          className: \"mt-2\",\n          children: currentAnswersSet.map((answer, i) => {\n            let chosen = !quizTime && answers[currentQuest - 1] == answer.id ? \"answer-content text-center chosen\" : \"answer-content text-center\";\n\n            if (quizTime && answered) {\n              if (answer.is_correct == 1) chosen = \"answer-content text-center correct\";else chosen = \"answer-content text-center wrong\";\n            }\n\n            return /*#__PURE__*/_jsxDEV(Col, {\n              lg: 6,\n              md: 6,\n              sm: 12,\n              className: \"p-1 answer\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: chosen,\n                onClick: () => checkAnswerMCQ(answer.id),\n                children: [answer.media != \"\" && /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"img-answer\",\n                  src: answer.media\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 72\n                }, this), Buffer(answer.answer_content, \"base64\").toString(\"utf-8\")]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 41\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this), quizTime && answered && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center mt-1\",\n          children: [questions[currentQuest - 1].answers.length == 1 && /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [\"\\u0110\\xE1p \\xE1n: \", answerDisplay]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: Buffer(questions[currentQuest - 1].explanation, \"base64\").toString(\"utf-8\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(QuizReview, \"KrFfFd/RK5vLds02GsbwAZvJxJY=\");\n\n_c = QuizReview;\nexport default QuizReview;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuizReview\");","map":{"version":3,"sources":["D:/Coding/Online Quiz System/online-quiz-system/Client/online-quiz-system/src/components/quiz-review/QuizReview.jsx"],"names":["React","useState","useEffect","useRef","Container","Row","Col","QuizReview","props","markContent","setMarkContent","questions","setQuestions","quizInfo","setQuizInfo","reviewContent","console","log","quiz_title","creator","currentQuest","question_content","media","question_type","quizTime","currentAnswerField","answerFieldClass","e","checkAnswerText","handleBoxChange","answerBoxContent","currentAnswersSet","map","answer","i","chosen","answers","id","answered","is_correct","checkAnswerMCQ","Buffer","answer_content","toString","length","answerDisplay","explanation"],"mappings":"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","sourcesContent":["import \"./quiz-review.css\";\r\nimport {React, useState, useEffect, useRef} from 'react'\r\nimport {Container, Row, Col} from \"react-bootstrap\";\r\n\r\nfunction QuizReview(props) {\r\n    const [markContent, setMarkContent] = useState([]);\r\n    const [questions, setQuestions] = useState([]);\r\n    const [quizInfo, setQuizInfo] = useState([]);\r\n\r\n    useEffect(() => {\r\n        setMarkContent(props.reviewContent);\r\n        setQuestions(props.questions);\r\n        setQuizInfo(props.quizInfo);\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        console.log(markContent);\r\n    }, [markContent])\r\n\r\n    return (\r\n        <>\r\n            <Container className=\"mt-3 mb-3\">\r\n                <h1 className=\"text-center\">{quizInfo.quiz_title}</h1>\r\n                <h3 className=\"text-center\">Tạo bởi: {quizInfo.creator}</h3>\r\n                {currentQuest != 0 && \r\n                    <>\r\n                    <div className=\"question-box d-flex justify-content-center align-items-center\">\r\n                        <h5 className=\"txt-quest\">{questions[currentQuest - 1].question_content}</h5>\r\n                    </div>\r\n                    {questions[currentQuest - 1].media != \"\" && <div className=\"text-center mt-2\">\r\n                        <img className=\"img-quest\" src={questions[currentQuest - 1].media}></img>\r\n                    </div>}\r\n                    {questions[currentQuest - 1].question_type == 1 && \r\n                    <div>\r\n                        {\r\n                            \r\n                            !quizTime && \r\n                            (<Form.Control value={currentAnswerField} disabled={answerFieldClass} type=\"text\" className=\"mt-2\" placeholder=\"Câu trả lời\" onKeyPress={(e) => checkAnswerText(e)} onChange={(e) => handleBoxChange(e)}>\r\n                            </Form.Control>)\r\n                        }\r\n                        {\r\n                            quizTime && (\r\n                                <Form.Control value={answerBoxContent} disabled={answerFieldClass} type=\"text\" className=\"mt-2\" placeholder=\"Câu trả lời\" onKeyPress={(e) => checkAnswerText(e)} onChange={(e) => handleBoxChange(e)}>\r\n                                </Form.Control>\r\n                            )\r\n                        }\r\n                    </div>}\r\n                    {questions[currentQuest - 1].question_type == 0 && \r\n                        <Row className=\"mt-2\">\r\n                            {\r\n                                currentAnswersSet.map((answer, i) => {\r\n                                    let chosen = !quizTime && answers[currentQuest - 1] == answer.id? \"answer-content text-center chosen\": \"answer-content text-center\";\r\n                                    if (quizTime && answered) {\r\n                                        if (answer.is_correct == 1)\r\n                                            chosen = \"answer-content text-center correct\"\r\n                                        else \r\n                                            chosen = \"answer-content text-center wrong\"\r\n                                    }\r\n                                    return (\r\n                                        <Col lg={6} md={6} sm={12} className=\"p-1 answer\">\r\n                                            <div className={chosen} onClick={() => checkAnswerMCQ(answer.id)}>\r\n                                                {answer.media != \"\" && <img className=\"img-answer\" src={answer.media}></img>}\r\n                                                {Buffer(answer.answer_content, \"base64\").toString(\"utf-8\")}\r\n                                            </div>\r\n                                        </Col>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </Row>\r\n                    }\r\n                    {\r\n                        quizTime && answered && (\r\n                            <div className=\"text-center mt-1\">\r\n                                {\r\n                                    questions[currentQuest - 1].answers.length == 1 && (\r\n                                        <h5>Đáp án: {answerDisplay}</h5>\r\n                                    )\r\n                                }\r\n                                <h5>{Buffer(questions[currentQuest - 1].explanation, \"base64\").toString(\"utf-8\")}</h5>\r\n                            </div>\r\n                        )\r\n                    }\r\n                    </>\r\n                }\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default QuizReview\r\n"]},"metadata":{},"sourceType":"module"}