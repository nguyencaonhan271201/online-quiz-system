{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding\\\\Quiz Generator Project\\\\Client\\\\online-quiz-system\\\\src\\\\pages\\\\quiz-create\\\\QuizCreate.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./quizcreate.css\";\nimport { React, useState, useEffect, useContext, useRef } from 'react';\nimport QuestionAddModal from \"./../../components/question-add-modal/QuestionAddModal\";\nimport QuestionEditModal from \"./../../components/question-edit-modal/QuestionEditModal\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport axios from \"axios\";\nimport { Paper, Chip } from \"@material-ui/core\"; //Bootstrap\n\nimport { Container, Col, Row, Form, Button } from \"react-bootstrap\"; //Material UI icons\n\nimport { Add } from \"@material-ui/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function QuizCreate() {\n  _s();\n\n  const {\n    user\n  } = useContext(AuthContext);\n  const [quizTitle, setQuizTitle] = useState(\"\");\n  const [quizCode, setQuizCode] = useState(\"\");\n  const [quizMode, setQuizMode] = useState(0);\n  const [quizTime, setQuizTime] = useState(\"\");\n  const [numberOfQuest, setNumberOfQuest] = useState(0);\n  const [useQuizTime, setUseQuizTime] = useState(false);\n  const [questionList, setQuestionList] = useState([]);\n  const [addQuestionModalShow, setAddQuestionModalShow] = useState(false);\n  const [submittedQuizDetails, setSubmittedQuizDetails] = useState(false);\n  const [quizDetailError, setQuizDetailError] = useState(\"\");\n  const [timeUnit, setTimeUnit] = useState(0);\n  const [editQuestionModalShow, setEditQuestionModalShow] = useState(false);\n  const [questionEditGet, setQuestionEditGet] = useState(null);\n  const [rawOrder, setRawOrder] = useState(false);\n\n  const onQuizModeChange = type => {\n    setQuizMode(type);\n  };\n\n  const onAddQuestionSubmit = input => {\n    setQuestionList([...questionList, input]);\n    setAddQuestionModalShow(false);\n    console.log(input);\n  };\n\n  const onEditQuestionSubmit = input => {\n    let cloneArray = [...questionList];\n    let {\n      questIndex,\n      ...content\n    } = input;\n    cloneArray[input[\"questIndex\"]] = content;\n    setQuestionList(cloneArray);\n    setEditQuestionModalShow(false);\n  };\n\n  useEffect(() => {\n    setNumberOfQuest(questionList.length);\n  }, [questionList]);\n\n  const submitQuizDetails = () => {\n    //Validate info\n    if (quizTitle === \"\") {\n      setQuizDetailError(\"Vui lòng nhập tiêu đề Quiz.\");\n      return;\n    }\n\n    if (quizMode === 1 && quizCode === \"\") {\n      setQuizDetailError(\"Vui lòng nhập mật khẩu Quiz.\");\n      return;\n    }\n\n    if (useQuizTime && isNaN(parseInt(quizTime))) {\n      setQuizDetailError(\"Thời gian quiz không hợp lệ.\");\n      return;\n    } //Pass validation\n\n\n    setSubmittedQuizDetails(true);\n  };\n\n  const editQuestion = index => {\n    let getQuest = questionList[index];\n    getQuest[\"questIndex\"] = index;\n    setQuestionEditGet(getQuest);\n    setEditQuestionModalShow(true);\n  };\n\n  const addQuiz = async () => {\n    const newQuiz = {\n      quiz_title: quizTitle,\n      quiz_mode: quizMode,\n      quiz_creator: user.id,\n      raw_order: rawOrder\n    };\n    let cloneQuestionList = [...questionList];\n\n    for (let i = 0; i < cloneQuestionList.length; i++) {\n      cloneQuestionList[i][\"questIndex\"] = i;\n    } //Quiz code\n\n\n    if (quizCode !== \"\") newQuiz[\"quiz_code\"] = quizCode; //Quiz time\n\n    if (useQuizTime) {\n      newQuiz[\"quiz_time\"] = timeUnit == 0 ? quizTime * 60 : quizTime;\n    }\n\n    newQuiz[\"questions\"] = cloneQuestionList;\n\n    try {\n      await axios.post(\"/quiz/create\", newQuiz);\n    } catch (err) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      className: \"p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center\",\n        children: \"T\\u1EA1o Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: 8,\n          sm: 12,\n          className: \"offset-md-2 offset-sm-0\",\n          children: [/*#__PURE__*/_jsxDEV(Form, {\n            id: \"quizDetailForm\",\n            children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              disabled: submittedQuizDetails ? \"disabled\" : \"\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-2\",\n                controlId: \"formBasicEmail\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Ti\\xEAu \\u0111\\u1EC1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  required: true,\n                  validate: \"Quiz name is not valid!\",\n                  onChange: e => setQuizTitle(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n                children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Row,\n                  className: \"mb-2\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    as: \"legend\",\n                    column: true,\n                    sm: 12,\n                    children: \"Ch\\u1EBF \\u0111\\u1ED9:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 129,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    sm: 12,\n                    children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n                      type: \"radio\",\n                      label: \"C\\xF4ng khai\",\n                      name: \"quiz-mode\",\n                      checked: quizMode === 0,\n                      onChange: () => onQuizModeChange(0)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 133,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n                      type: \"radio\",\n                      label: \"Ri\\xEAng t\\u01B0\",\n                      name: \"quiz-mode\",\n                      checked: quizMode === 1,\n                      onChange: () => onQuizModeChange(1)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 140,\n                      columnNumber: 41\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 132,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-2\",\n                controlId: \"formBasicEmail\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"M\\u1EADt kh\\u1EA9u\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  validate: \"Quiz password is not valid!\",\n                  minLength: 6,\n                  maxLength: 10,\n                  disabled: quizMode === 0 && \"disabled\",\n                  onChange: e => setQuizCode(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-2\",\n                controlId: \"formBasicEmail\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n                  label: \"Th\\u1EDDi gian\",\n                  onChange: () => setUseQuizTime(!useQuizTime)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n                  muted: true,\n                  children: \"L\\u1EF1a ch\\u1ECDn v\\xE0 nh\\u1EADp th\\u1EDDi gian l\\xE0m b\\xE0i cho to\\xE0n b\\u1ED9 quiz ho\\u1EB7c kh\\xF4ng l\\u1EF1a ch\\u1ECDn v\\xE0 \\u0111\\u1EB7t th\\u1EDDi gian ri\\xEAng l\\u1EBB cho t\\u1EEBng c\\xE2u h\\u1ECFi.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    sm: 9,\n                    children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                      type: \"number\",\n                      min: 1,\n                      validate: \"Quiz password is not valid!\",\n                      disabled: !useQuizTime && \"disabled\",\n                      onChange: e => {\n                        setQuizTime(e.target.value);\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 170,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 169,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    sm: 3,\n                    className: \"d-flex align-items-center\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n                      type: \"radio\",\n                      inline: true,\n                      label: \"ph\\xFAt\",\n                      name: \"time-mode\",\n                      disabled: !useQuizTime && \"disabled\",\n                      checked: useQuizTime && timeUnit === 0,\n                      onChange: () => setTimeUnit(0)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 179,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n                      type: \"radio\",\n                      inline: true,\n                      label: \"gi\\xE2y\",\n                      name: \"time-mode\",\n                      disabled: !useQuizTime && \"disabled\",\n                      checked: useQuizTime && timeUnit === 1,\n                      onChange: () => setTimeUnit(1)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 188,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 178,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n                  label: \"Gi\\u1EEF th\\u1EE9 t\\u1EF1 c\\xE2u h\\u1ECFi\",\n                  checked: rawOrder,\n                  onChange: () => setRawOrder(!rawOrder)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n                  muted: true,\n                  children: \"N\\u1EBFu kh\\xF4ng ch\\u1ECDn, c\\xE2u h\\u1ECFi s\\u1EBD \\u0111\\u01B0\\u1EE3c s\\u1EAFp x\\u1EBFp ng\\u1EABu nhi\\xEAn.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 33\n              }, this), !submittedQuizDetails && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-center mt-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"error\",\n                  children: quizDetailError\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"success\",\n                  onClick: () => submitQuizDetails(),\n                  children: \"X\\xE1c nh\\u1EADn th\\xF4ng tin Quiz\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 60\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this), submittedQuizDetails && /*#__PURE__*/_jsxDEV(Row, {\n            className: \"mt-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-center\",\n              children: \"C\\xE2u h\\u1ECFi\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"info\",\n                style: {\n                  paddingLeft: 15,\n                  paddingRight: 15\n                },\n                onClick: () => setAddQuestionModalShow(true),\n                children: /*#__PURE__*/_jsxDEV(Add, {\n                  fontSize: \"small\",\n                  style: {\n                    color: \"white\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mt-2 text-center\",\n              children: [\"S\\u1ED1 l\\u01B0\\u1EE3ng c\\xE2u h\\u1ECFi: \", numberOfQuest]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 29\n            }, this), questionList.map((quest, index) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-2 mb-2 questionBox\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"quest-title\",\n                  children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                    children: [\"C\\xE2u \", index + 1, \": \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 230,\n                    columnNumber: 72\n                  }, this), quest[\"question\"]]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 45\n                }, this), quest[\"time\"] !== 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"quest-title\",\n                  children: [\"Th\\u1EDDi gian: \", quest[\"time\"], \" gi\\xE2y\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 69\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"quest-title\",\n                  children: [\"\\u0110i\\u1EC3m s\\u1ED1: \", quest[\"point\"]]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 45\n                }, this), quest[\"image\"] !== \"\" && /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"question-image\",\n                  alt: \"\",\n                  src: quest[\"image\"]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"quest-content\",\n                  children: [quest[\"questionType\"] === 1 && /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"mb-1\",\n                      children: \"\\u0110\\xE1p \\xE1n:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 239,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n                      component: \"ul\",\n                      children: quest[\"keys\"][0].split(\"~>\").map((choice, index) => {\n                        return /*#__PURE__*/_jsxDEV(\"li\", {\n                          children: /*#__PURE__*/_jsxDEV(Chip, {\n                            label: choice\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 244,\n                            columnNumber: 73\n                          }, this)\n                        }, index, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 243,\n                          columnNumber: 69\n                        }, this);\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 240,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true), quest[\"questionType\"] === 0 && quest[\"keys\"].map((key, index) => {\n                    return /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                        className: quest[\"keyCorrects\"][index] ? \"correct-key\" : \"incorrect-key\",\n                        children: [\"Ph\\u01B0\\u01A1ng \\xE1n \", index + 1, \": \", key]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 257,\n                        columnNumber: 57\n                      }, this), quest[\"keyImages\"][index] !== \"\" && /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"text-center\",\n                        children: /*#__PURE__*/_jsxDEV(\"img\", {\n                          className: \"key-image\",\n                          alt: \"\",\n                          src: quest[\"keyImages\"][index]\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 262,\n                          columnNumber: 65\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 261,\n                        columnNumber: 61\n                      }, this)]\n                    }, void 0, true);\n                  }), quest[\"explain\"] !== \"\" && /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Gi\\u1EA3i th\\xEDch: \", quest[\"explain\"]]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 269,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"mt-1\",\n                  variant: \"warning\",\n                  onClick: () => editQuestion(index),\n                  children: \"Ch\\u1EC9nh s\\u1EEDa\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 45\n                }, this)]\n              }, quest[\"question\"], true, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 41\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 51\n          }, this), submittedQuizDetails && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"success\",\n              onClick: () => addQuiz(),\n              children: \"X\\xE1c nh\\u1EADn\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(QuestionAddModal, {\n      show: addQuestionModalShow,\n      onHide: () => setAddQuestionModalShow(false),\n      numberOfQuest: numberOfQuest,\n      onAddQuestionSubmit: onAddQuestionSubmit,\n      useQuizTime: useQuizTime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 13\n    }, this), questionEditGet && /*#__PURE__*/_jsxDEV(QuestionEditModal, {\n      show: editQuestionModalShow,\n      onHide: () => setEditQuestionModalShow(false),\n      onEditQuestionSubmit: onEditQuestionSubmit,\n      useQuizTime: useQuizTime,\n      questionEditGet: questionEditGet\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 36\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 9\n  }, this);\n}\n\n_s(QuizCreate, \"lIUuRdbj7QltuMk9AQHVGC8gDC0=\");\n\n_c = QuizCreate;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuizCreate\");","map":{"version":3,"sources":["D:/Coding/Quiz Generator Project/Client/online-quiz-system/src/pages/quiz-create/QuizCreate.jsx"],"names":["React","useState","useEffect","useContext","useRef","QuestionAddModal","QuestionEditModal","AuthContext","axios","Paper","Chip","Container","Col","Row","Form","Button","Add","QuizCreate","user","quizTitle","setQuizTitle","quizCode","setQuizCode","quizMode","setQuizMode","quizTime","setQuizTime","numberOfQuest","setNumberOfQuest","useQuizTime","setUseQuizTime","questionList","setQuestionList","addQuestionModalShow","setAddQuestionModalShow","submittedQuizDetails","setSubmittedQuizDetails","quizDetailError","setQuizDetailError","timeUnit","setTimeUnit","editQuestionModalShow","setEditQuestionModalShow","questionEditGet","setQuestionEditGet","rawOrder","setRawOrder","onQuizModeChange","type","onAddQuestionSubmit","input","console","log","onEditQuestionSubmit","cloneArray","questIndex","content","length","submitQuizDetails","isNaN","parseInt","editQuestion","index","getQuest","addQuiz","newQuiz","quiz_title","quiz_mode","quiz_creator","id","raw_order","cloneQuestionList","i","post","err","e","target","value","paddingLeft","paddingRight","color","map","quest","split","choice","key"],"mappings":"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","sourcesContent":["import \"./quizcreate.css\";\r\nimport {React, useState, useEffect, useContext, useRef} from 'react'\r\nimport QuestionAddModal from \"./../../components/question-add-modal/QuestionAddModal\";\r\nimport QuestionEditModal from \"./../../components/question-edit-modal/QuestionEditModal\";\r\nimport {AuthContext} from \"../../context/AuthContext\";\r\nimport axios from \"axios\";\r\nimport {Paper, Chip} from \"@material-ui/core\";\r\n\r\n//Bootstrap\r\nimport {Container, Col, Row, Form, Button} from \"react-bootstrap\";\r\n\r\n//Material UI icons\r\nimport {Add} from \"@material-ui/icons\";  \r\n\r\nexport default function QuizCreate() {\r\n    const {user} = useContext(AuthContext);\r\n    const [quizTitle, setQuizTitle] = useState(\"\");\r\n    const [quizCode, setQuizCode] = useState(\"\");\r\n    const [quizMode, setQuizMode] = useState(0);\r\n    const [quizTime, setQuizTime] = useState(\"\");\r\n    const [numberOfQuest, setNumberOfQuest] = useState(0)\r\n    const [useQuizTime, setUseQuizTime] = useState(false);\r\n    const [questionList, setQuestionList] = useState([]);\r\n    const [addQuestionModalShow, setAddQuestionModalShow] = useState(false);\r\n    const [submittedQuizDetails, setSubmittedQuizDetails] = useState(false);\r\n    const [quizDetailError, setQuizDetailError] = useState(\"\");\r\n    const [timeUnit, setTimeUnit] = useState(0);\r\n    const [editQuestionModalShow, setEditQuestionModalShow] = useState(false);\r\n    const [questionEditGet, setQuestionEditGet] = useState(null);\r\n    const [rawOrder, setRawOrder] = useState(false);\r\n\r\n    const onQuizModeChange = (type) => {\r\n        setQuizMode(type);\r\n    }\r\n\r\n    const onAddQuestionSubmit = (input) => {\r\n        setQuestionList([...questionList, input]);\r\n        setAddQuestionModalShow(false);\r\n\r\n        console.log(input);\r\n    }\r\n\r\n    const onEditQuestionSubmit = (input) => {\r\n        let cloneArray = [...questionList];\r\n        let {questIndex, ...content} = input;\r\n        cloneArray[input[\"questIndex\"]] = content;\r\n        setQuestionList(cloneArray);\r\n        setEditQuestionModalShow(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setNumberOfQuest(questionList.length);\r\n    }, [questionList])\r\n\r\n    const submitQuizDetails = () => {\r\n        //Validate info\r\n        if (quizTitle === \"\") {\r\n            setQuizDetailError(\"Vui lòng nhập tiêu đề Quiz.\");\r\n            return;\r\n        }\r\n        if (quizMode === 1 && quizCode === \"\") {\r\n            setQuizDetailError(\"Vui lòng nhập mật khẩu Quiz.\");\r\n            return;\r\n        }\r\n        if (useQuizTime && isNaN(parseInt(quizTime))) {\r\n            setQuizDetailError(\"Thời gian quiz không hợp lệ.\");\r\n            return;\r\n        }\r\n\r\n        //Pass validation\r\n        setSubmittedQuizDetails(true);\r\n    }\r\n\r\n    const editQuestion = (index) => {\r\n        let getQuest = questionList[index];\r\n        getQuest[\"questIndex\"] = index;\r\n        setQuestionEditGet(getQuest);\r\n        setEditQuestionModalShow(true);\r\n    }\r\n\r\n    const addQuiz = async() => {\r\n        const newQuiz = {\r\n            quiz_title: quizTitle, \r\n            quiz_mode: quizMode,\r\n            quiz_creator: user.id,\r\n            raw_order: rawOrder\r\n        }\r\n\r\n        let cloneQuestionList = [...questionList];\r\n        for (let i = 0; i < cloneQuestionList.length; i++) {\r\n            cloneQuestionList[i][\"questIndex\"] = i;\r\n        }\r\n\r\n        //Quiz code\r\n        if (quizCode !== \"\")\r\n            newQuiz[\"quiz_code\"] = quizCode;\r\n\r\n        //Quiz time\r\n        if (useQuizTime)\r\n        {\r\n            newQuiz[\"quiz_time\"] = timeUnit == 0? quizTime * 60 : quizTime;\r\n        }\r\n\r\n        newQuiz[\"questions\"] = cloneQuestionList;\r\n\r\n        try {\r\n            await axios.post(\"/quiz/create\", newQuiz);\r\n        } catch (err) {\r\n            \r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Container className=\"p-4\">\r\n                <h1 className=\"text-center\">Tạo Quiz</h1>\r\n\r\n                <Row>\r\n                    <Col md={8} sm={12} className=\"offset-md-2 offset-sm-0\">\r\n                        <Form id=\"quizDetailForm\">\r\n                            <fieldset disabled={submittedQuizDetails? \"disabled\" : \"\"}>\r\n                                <Form.Group className=\"mb-2\" controlId=\"formBasicEmail\">\r\n                                    <Form.Label>Tiêu đề</Form.Label>\r\n                                    <Form.Control type=\"text\" required validate=\"Quiz name is not valid!\"\r\n                                    onChange={(e) => setQuizTitle(e.target.value)}/>\r\n                                </Form.Group>\r\n                                <fieldset>\r\n                                    <Form.Group as={Row} className=\"mb-2\">\r\n                                    <Form.Label as=\"legend\" column sm={12}>\r\n                                        Chế độ:\r\n                                    </Form.Label>\r\n                                    <Col sm={12}>\r\n                                        <Form.Check\r\n                                            type=\"radio\"\r\n                                            label=\"Công khai\"\r\n                                            name=\"quiz-mode\"\r\n                                            checked={quizMode === 0}\r\n                                            onChange={() => onQuizModeChange(0)}\r\n                                        />\r\n                                        <Form.Check\r\n                                            type=\"radio\"\r\n                                            label=\"Riêng tư\"\r\n                                            name=\"quiz-mode\"\r\n                                            checked={quizMode === 1}\r\n                                            onChange={() => onQuizModeChange(1)}\r\n                                        />\r\n                                    </Col>\r\n                                    </Form.Group>\r\n                                </fieldset>\r\n                                <Form.Group className=\"mb-2\" controlId=\"formBasicEmail\">\r\n                                    <Form.Label>Mật khẩu</Form.Label>\r\n                                    <Form.Control \r\n                                        type=\"text\"\r\n                                        validate=\"Quiz password is not valid!\" \r\n                                        minLength={6} maxLength={10}\r\n                                        disabled = {quizMode === 0 && \"disabled\"}\r\n                                        onChange = {(e) => setQuizCode(e.target.value)}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group className=\"mb-2\" controlId=\"formBasicEmail\">\r\n                                    <Form.Check \r\n                                        label=\"Thời gian\" \r\n                                        onChange = {() => setUseQuizTime(!useQuizTime)} \r\n                                    />\r\n                                    <Form.Text muted>\r\n                                        Lựa chọn và nhập thời gian làm bài cho toàn bộ quiz hoặc không lựa chọn và đặt thời gian riêng lẻ cho từng câu hỏi.\r\n                                    </Form.Text>\r\n                                    <Row>\r\n                                        <Col sm={9}>\r\n                                            <Form.Control \r\n                                                type=\"number\"\r\n                                                min = {1}\r\n                                                validate=\"Quiz password is not valid!\" \r\n                                                disabled = {!useQuizTime && \"disabled\"}\r\n                                                onChange = {(e) => {setQuizTime(e.target.value)}}\r\n                                            />\r\n                                        </Col>\r\n                                        <Col sm={3} className=\"d-flex align-items-center\">\r\n                                            <Form.Check \r\n                                                type=\"radio\"\r\n                                                inline\r\n                                                label=\"phút\" \r\n                                                name=\"time-mode\"\r\n                                                disabled = {!useQuizTime && \"disabled\"}\r\n                                                checked = {useQuizTime && timeUnit === 0}\r\n                                                onChange = {() => setTimeUnit(0)}\r\n                                            />\r\n                                            <Form.Check \r\n                                                type=\"radio\"\r\n                                                inline\r\n                                                label=\"giây\" \r\n                                                name=\"time-mode\"\r\n                                                disabled = {!useQuizTime && \"disabled\"}\r\n                                                checked = {useQuizTime && timeUnit === 1}\r\n                                                onChange = {() => setTimeUnit(1)}\r\n                                            />\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <Form.Check \r\n                                        label=\"Giữ thứ tự câu hỏi\" \r\n                                        checked={rawOrder}\r\n                                        onChange={() => setRawOrder(!rawOrder)}\r\n                                    />\r\n                                    <Form.Text muted>\r\n                                        Nếu không chọn, câu hỏi sẽ được sắp xếp ngẫu nhiên.\r\n                                    </Form.Text>\r\n                                </Form.Group>\r\n                                {!submittedQuizDetails && (<div className=\"text-center mt-3\">\r\n                                    <p className=\"error\">{quizDetailError}</p>\r\n                                    <Button variant=\"success\" onClick={() => submitQuizDetails()}>\r\n                                        Xác nhận thông tin Quiz\r\n                                    </Button>\r\n                                </div>)}\r\n                            </fieldset>\r\n                        </Form>\r\n                        {submittedQuizDetails && (<Row className=\"mt-2\">\r\n                            <h3 className=\"text-center\">Câu hỏi</h3>\r\n                            <div className=\"text-center\">\r\n                                <Button variant=\"info\" style={{paddingLeft: 15, paddingRight: 15}} onClick={() => setAddQuestionModalShow(true)}>\r\n                                    <Add fontSize=\"small\" style={{ color: \"white\"}}></Add>\r\n                                </Button>\r\n                            </div>\r\n                            <p className=\"mt-2 text-center\" >Số lượng câu hỏi: {numberOfQuest}</p>\r\n                            {\r\n                                questionList.map((quest, index) => {\r\n                                    return ( \r\n                                        <div className=\"mt-2 mb-2 questionBox\" key={quest[\"question\"]}>\r\n                                            <p className=\"quest-title\"><b>Câu {index + 1}: </b>{quest[\"question\"]}</p>\r\n                                            {quest[\"time\"] !== 0 && <p className=\"quest-title\">Thời gian: {quest[\"time\"]} giây</p> }\r\n                                            <p className=\"quest-title\">Điểm số: {quest[\"point\"]}</p>\r\n                                            {quest[\"image\"] !== \"\" &&\r\n                                                <img className=\"question-image\" alt=\"\" src={quest[\"image\"]}></img>\r\n                                            }\r\n                                            <div className=\"quest-content\">\r\n                                                {quest[\"questionType\"] === 1 && (\r\n                                                    <>\r\n                                                        <p className=\"mb-1\">Đáp án:</p>\r\n                                                        <Paper component=\"ul\">\r\n                                                            {quest[\"keys\"][0].split(\"~>\").map((choice, index) => {\r\n                                                                return (\r\n                                                                    <li key={index}>\r\n                                                                        <Chip\r\n                                                                            label={choice}\r\n                                                                        />\r\n                                                                    </li>\r\n                                                                )\r\n                                                            })}\r\n                                                        </Paper>\r\n                                                    </>\r\n                                                )}\r\n                                                {quest[\"questionType\"] === 0 && (\r\n                                                    quest[\"keys\"].map((key, index) => {\r\n                                                        return (\r\n                                                        <>\r\n                                                        <p className={quest[\"keyCorrects\"][index]? \"correct-key\" : \"incorrect-key\"}>\r\n                                                            Phương án {index + 1}: {key}\r\n                                                        </p>\r\n                                                        {quest[\"keyImages\"][index] !== \"\" &&\r\n                                                            <div className=\"text-center\">\r\n                                                                <img className=\"key-image\" alt=\"\" src={quest[\"keyImages\"][index]}></img>\r\n                                                            </div>\r\n                                                        }\r\n                                                        </>)\r\n                                                    })\r\n                                                )}\r\n                                                {quest[\"explain\"] !== \"\" && (\r\n                                                    <p>Giải thích: {quest[\"explain\"]}</p>\r\n                                                )}\r\n                                            </div>\r\n                                            <Button className=\"mt-1\" variant=\"warning\" onClick={() => editQuestion(index)}>Chỉnh sửa</Button>\r\n                                        </div>\r\n                                     )\r\n                                })\r\n                            }\r\n                        </Row>)}\r\n                        {submittedQuizDetails && (\r\n                            <div className=\"text-center\">\r\n                                <Button variant=\"success\" onClick={() => addQuiz()}>Xác nhận</Button>\r\n                            </div>\r\n                        )}\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n\r\n            <QuestionAddModal\r\n                show={addQuestionModalShow}\r\n                onHide={() => setAddQuestionModalShow(false)}\r\n                numberOfQuest={numberOfQuest}\r\n                onAddQuestionSubmit={onAddQuestionSubmit}\r\n                useQuizTime={useQuizTime}\r\n            >\r\n\r\n            </QuestionAddModal>\r\n\r\n            {\r\n                questionEditGet && <QuestionEditModal\r\n                    show={editQuestionModalShow}\r\n                    onHide={() => setEditQuestionModalShow(false)}\r\n                    onEditQuestionSubmit={onEditQuestionSubmit}\r\n                    useQuizTime={useQuizTime}\r\n                    questionEditGet={questionEditGet}\r\n                >\r\n\r\n                </QuestionEditModal>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}