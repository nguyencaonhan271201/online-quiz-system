{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding\\\\Quiz Generator Project\\\\Client\\\\online-quiz-system\\\\src\\\\pages\\\\home\\\\Home.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./home.css\";\nimport { React, useState, useEffect, useContext } from 'react';\nimport axios from \"axios\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport { Row, Col, Container, Card, Button } from \"react-bootstrap\";\nimport { Redirect } from \"react-router-dom\";\nimport QuizCreate from \"./../quiz-create/QuizCreate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n\n  const {\n    user\n  } = useContext(AuthContext);\n  const [mode, setMode] = useState(0);\n  const [publicQuizzes, setPublicQuizzes] = useState([]);\n  const [quizChosen, setQuizChosen] = useState(false);\n  const [quizID, setQuizID] = useState(-1);\n  const [quizPass, setQuizPass] = useState(\"\");\n  const [quizValid, setQuizValid] = useState(false);\n\n  const getQuizzes = async () => {\n    let listOfQuizzes = await axios.get(\"/quiz/public\");\n    listOfQuizzes = JSON.parse(listOfQuizzes.request.response);\n    setPublicQuizzes(listOfQuizzes);\n  };\n\n  const renderRedirect = () => {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: '/join',\n        state: {\n          id: quizID,\n          pass: quizPass\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 16\n    }, this);\n  };\n\n  const joinQuiz = async (quizID, quizPass) => {\n    setQuizPass(quizPass);\n    setQuizChosen(true);\n    setQuizID(quizID); //Validate pass\n\n    const info = {\n      id: quizID,\n      pass: quizPass\n    };\n    let quizJoinResult = await axios.post(`/quiz/join_check`, info);\n\n    if (quizJoinResult.status === 200) {\n      //Success\n      setQuizValid(true);\n    } else if (quizJoinResult.status === 403) {//Wrong password\n    } else {}\n  };\n\n  useEffect(() => {\n    getQuizzes();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      className: \"mt-3 mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center\",\n        children: \"List of Quizzes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children:\n        /* Show public quizzes */\n        publicQuizzes.map(quiz => {\n          //Check time\n          let time = \"\";\n\n          if (quiz.quiz_time && quiz.quiz_time != 0) {\n            if (quiz.quiz_time > 60) {\n              time = (quiz.quiz_time / 60).toString() + \" phút\";\n            } else {\n              time = quiz.quiz_time.toString() + \" giây\";\n            }\n          }\n\n          return /*#__PURE__*/_jsxDEV(Col, {\n            className: \"quiz-choose-box p-2\",\n            lg: 4,\n            sm: 6,\n            md: 6,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              style: {\n                width: 'auto'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n                variant: \"top\",\n                src: \"https://images-na.ssl-images-amazon.com/images/I/71k5kfdB9KL.png\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                  className: \"text-center\",\n                  children: /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: quiz.quiz_title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 85,\n                    columnNumber: 77\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                  className: \"quiz-info\",\n                  children: [\"T\\u1EA1o b\\u1EDFi: \", quiz.fullname, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 87,\n                    columnNumber: 70\n                  }, this), \"S\\u1ED1 c\\xE2u h\\u1ECFi: \", quiz.number_of_quests, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 81\n                  }, this), quiz.quiz_time && /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Th\\u1EDDi gian: \", time]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 89,\n                    columnNumber: 64\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"info\",\n                  className: \"text-white\",\n                  onClick: () => joinQuiz(quiz.id, \"\"),\n                  children: \"Tham gia\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), quizValid && renderRedirect(), /*#__PURE__*/_jsxDEV(Modal, {\n      size: \"lg\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      ...props,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          id: \"contained-modal-title-vcenter\",\n          children: [\"Th\\xEAm c\\xE2u h\\u1ECFi (c\\xE2u \", props.numberOfQuest + 1, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            md: 10,\n            sm: 12,\n            className: \"offset-md-1 offset-sm-0\",\n            children: [/*#__PURE__*/_jsxDEV(Form, {\n              id: \"questionAddForm\",\n              onSubmit: prepareFormSubmit,\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"C\\xE2u h\\u1ECFi\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  as: \"textarea\",\n                  required: true,\n                  validate: \"Quiz name is not valid!\",\n                  onChange: e => setQuestion(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"\",\n                children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n                  children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                    as: Row,\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      as: \"legend\",\n                      column: true,\n                      sm: 2,\n                      children: \"Lo\\u1EA1i:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 125,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      sm: 12,\n                      children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n                        type: \"radio\",\n                        label: \"Tr\\u1EAFc nghi\\u1EC7m\",\n                        name: \"question-type\",\n                        checked: questionType === 0,\n                        onChange: () => handleQuestionTypeChange(0)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 129,\n                        columnNumber: 37\n                      }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n                        type: \"radio\",\n                        label: \"Tr\\u1EA3 l\\u1EDDi ng\\u1EAFn\",\n                        name: \"question-type\",\n                        checked: questionType === 1,\n                        onChange: () => handleQuestionTypeChange(1)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 136,\n                        columnNumber: 38\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 128,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 124,\n                    columnNumber: 33\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 29\n              }, this), questionType === 0 && /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"S\\u1ED1 ph\\u01B0\\u01A1ng \\xE1n\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"number\",\n                  validate: \"Ph\\u1EA3i l\\xE0 gi\\xE1 tr\\u1ECB t\\u1EEB 2 \\u0111\\u1EBFn 5\",\n                  min: 2,\n                  max: 5,\n                  onChange: e => handleChoicesCountChange(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"error\",\n                  children: numberOfChoicesError\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 34\n              }, this), numberOfChoicesError === \"\" && questionType === 0 && [...Array(parseInt(numberOfChoices))].map((x, i) => {\n                let getClassName = `question-${numberOfChoices}-answer`;\n                let idImageName = `file-${i}`;\n                return /*#__PURE__*/_jsxDEV(Form.Group, {\n                  className: \"mt-2\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: [\"Ph\\u01B0\\u01A1ng \\xE1n \", i + 1, /*#__PURE__*/_jsxDEV(Form.Check, {\n                      type: \"radio\",\n                      label: \"\\u0110\\xFAng\",\n                      name: getClassName,\n                      onChange: () => handleCorrectKeyChange(i)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 166,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 165,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    validate: \"Kh\\xF4ng h\\u1EE3p l\\u1EC7!\",\n                    minLength: 1,\n                    onChange: e => handleKeyChange(i, e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 173,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                    className: \"mb-3 mt-3\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"\\u1EA2nh ph\\u01B0\\u01A1ng \\xE1n (n\\u1EBFu c\\xF3)\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 176,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 176,\n                      columnNumber: 96\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: idImageName,\n                      className: \"shareOption\",\n                      style: {\n                        cursor: \"pointer\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(PermMedia, {\n                        htmlColor: \"green\",\n                        className: \"shareIcon\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 178,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                        style: {\n                          display: \"none\"\n                        },\n                        type: \"file\",\n                        id: idImageName,\n                        accept: \".png, .jpeg, .jpg\",\n                        size: \"sm\",\n                        onChange: e => handleKeyImage(i, e.target.files[0])\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 179,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 177,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 175,\n                    columnNumber: 45\n                  }, this), keyImages[i] && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"keyImgContainer\",\n                    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                      className: \"shareImg\",\n                      src: URL.createObjectURL(keyImages[i]),\n                      alt: \"\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 183,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(Cancel, {\n                      className: \"shareCancelImg\",\n                      onClick: () => setImageNull(i)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 184,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 182,\n                    columnNumber: 62\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 41\n                }, this);\n              }) || questionType === 1 && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  className: \"\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"\\u0110\\xE1p \\xE1n\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 192,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    validate: \"\\u0110\\xE1p \\xE1n kh\\xF4ng h\\u1EE3p l\\u1EC7!\",\n                    minLength: 1,\n                    value: type1CurrentInput,\n                    onChange: e => handleKeyChange(0, e.target.value),\n                    onKeyPress: e => keyBoxKeyDown(e)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 193,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 37\n                }, this), keyType1Choices.length > 0 && /*#__PURE__*/_jsxDEV(Paper, {\n                  component: \"ul\",\n                  children: keyType1Choices.map((choice, index) => {\n                    return /*#__PURE__*/_jsxDEV(\"li\", {\n                      children: /*#__PURE__*/_jsxDEV(Chip, {\n                        label: choice,\n                        onDelete: () => deleteKeyType1Choice(index)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 203,\n                        columnNumber: 53\n                      }, this)\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 202,\n                      columnNumber: 49\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mt-2\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Gi\\u1EA3i th\\xEDch (n\\u1EBFu c\\xF3)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  as: \"textarea\",\n                  validate: \"Kh\\xF4ng h\\u1EE3p l\\u1EC7!\",\n                  onChange: e => setExplain(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mt-2\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"\\u0110i\\u1EC3m s\\u1ED1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"number\",\n                  min: 0,\n                  validate: \"Kh\\xF4ng h\\u1EE3p l\\u1EC7!\",\n                  onChange: e => setPoint(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 29\n              }, this), !props.useQuizTime && /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3 mt-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Th\\u1EDDi gian tr\\u1EA3 l\\u1EDDi (gi\\xE2y): \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 84\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"number\",\n                  min: 1,\n                  onChange: e => setTime(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 52\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3 mt-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"\\u1EA2nh c\\xE2u h\\u1ECFi (n\\u1EBFu c\\xF3)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 78\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"file\",\n                  className: \"shareOption\",\n                  style: {\n                    cursor: \"pointer\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(PermMedia, {\n                    htmlColor: \"green\",\n                    className: \"shareIcon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 236,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    style: {\n                      display: \"none\"\n                    },\n                    type: \"file\",\n                    id: \"file\",\n                    accept: \".png, .jpeg, .jpg\",\n                    size: \"sm\",\n                    onChange: e => setFile(e.target.files[0])\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 237,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 25\n            }, this), file && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"shareImgContainer\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"shareImg\",\n                src: URL.createObjectURL(file),\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Cancel, {\n                className: \"shareCancelImg\",\n                onClick: () => setFile(null)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 38\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: validateError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"success\",\n          type: \"submit\",\n          form: \"questionAddForm\",\n          children: \"Th\\xEAm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Home, \"IA7nEYtBkpxySenUqd7mVWiOjXk=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["D:/Coding/Quiz Generator Project/Client/online-quiz-system/src/pages/home/Home.jsx"],"names":["React","useState","useEffect","useContext","axios","AuthContext","Row","Col","Container","Card","Button","Redirect","QuizCreate","Home","user","mode","setMode","publicQuizzes","setPublicQuizzes","quizChosen","setQuizChosen","quizID","setQuizID","quizPass","setQuizPass","quizValid","setQuizValid","getQuizzes","listOfQuizzes","get","JSON","parse","request","response","renderRedirect","pathname","state","id","pass","joinQuiz","info","quizJoinResult","post","status","map","quiz","time","quiz_time","toString","width","quiz_title","fullname","number_of_quests","props","numberOfQuest","prepareFormSubmit","e","setQuestion","target","value","questionType","handleQuestionTypeChange","handleChoicesCountChange","numberOfChoicesError","Array","parseInt","numberOfChoices","x","i","getClassName","idImageName","handleCorrectKeyChange","handleKeyChange","cursor","display","handleKeyImage","files","keyImages","URL","createObjectURL","setImageNull","type1CurrentInput","keyBoxKeyDown","keyType1Choices","length","choice","index","deleteKeyType1Choice","setExplain","setPoint","useQuizTime","setTime","setFile","file","validateError"],"mappings":"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","sourcesContent":["import \"./home.css\";\r\nimport {React, useState, useEffect, useContext} from 'react';\r\nimport axios from \"axios\";\r\nimport {AuthContext} from \"../../context/AuthContext\";\r\nimport {Row, Col, Container, Card, Button} from \"react-bootstrap\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nimport QuizCreate from \"./../quiz-create/QuizCreate\";\r\n\r\n\r\nexport default function Home() {\r\n    const {user} = useContext(AuthContext);\r\n    const [mode, setMode] = useState(0);\r\n    const [publicQuizzes, setPublicQuizzes] = useState([]);\r\n    const [quizChosen, setQuizChosen] = useState(false);\r\n    const [quizID, setQuizID] = useState(-1);\r\n    const [quizPass, setQuizPass] = useState(\"\");\r\n    const [quizValid, setQuizValid] = useState(false);\r\n\r\n    const getQuizzes = async() => {\r\n        let listOfQuizzes = await axios.get(\"/quiz/public\");\r\n        listOfQuizzes = JSON.parse(listOfQuizzes.request.response);\r\n        setPublicQuizzes(listOfQuizzes);\r\n    }\r\n\r\n    const renderRedirect = () => {\r\n        return <Redirect\r\n            to={{\r\n                pathname: '/join',\r\n                state: {\r\n                    id: quizID,\r\n                    pass: quizPass\r\n                }\r\n            }}\r\n        />\r\n    }\r\n\r\n    const joinQuiz = async(quizID, quizPass) => {\r\n        setQuizPass(quizPass);\r\n        setQuizChosen(true);\r\n        setQuizID(quizID);\r\n\r\n        //Validate pass\r\n        const info = {\r\n            id: quizID,\r\n            pass: quizPass\r\n        }\r\n        let quizJoinResult = await axios.post(`/quiz/join_check`, info);\r\n        if (quizJoinResult.status === 200) {\r\n            //Success\r\n            setQuizValid(true);\r\n        } else if (quizJoinResult.status === 403) {\r\n            //Wrong password\r\n        } else {\r\n\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getQuizzes();    \r\n    }, [])\r\n    \r\n    return (\r\n        <>\r\n            <Container className=\"mt-3 mb-3\">\r\n                <h1 className=\"text-center\">List of Quizzes</h1>\r\n                <Row>\r\n                    {\r\n                        /* Show public quizzes */\r\n                        publicQuizzes.map(quiz => {\r\n                            //Check time\r\n                            let time = \"\";\r\n                            if (quiz.quiz_time && quiz.quiz_time != 0) {\r\n                                if (quiz.quiz_time > 60) {\r\n                                    time = (quiz.quiz_time / 60).toString() + \" phút\";\r\n                                } else {\r\n                                    time = (quiz.quiz_time).toString() + \" giây\";\r\n                                }\r\n                            }\r\n                            return (\r\n                                <Col className=\"quiz-choose-box p-2\" lg={4} sm={6} md={6} xs={12}>\r\n                                    <Card style={{ width: 'auto' }}>\r\n                                    <Card.Img variant=\"top\" src=\"https://images-na.ssl-images-amazon.com/images/I/71k5kfdB9KL.png\"/>\r\n                                    <Card.Body>\r\n                                        <Card.Title className=\"text-center\"><b>{quiz.quiz_title}</b></Card.Title>\r\n                                        <Card.Text className=\"quiz-info\">\r\n                                            Tạo bởi: {quiz.fullname} <br></br>\r\n                                            Số câu hỏi: {quiz.number_of_quests} <br/>\r\n                                            {quiz.quiz_time && <p>Thời gian: {time}</p>}\r\n                                        </Card.Text>\r\n                                        <Button variant=\"info\" className=\"text-white\" onClick={() => joinQuiz(quiz.id, \"\")}>Tham gia</Button>\r\n                                    </Card.Body>\r\n                                    </Card>\r\n                                </Col>\r\n                            )\r\n                        })\r\n                    }\r\n                </Row>\r\n            </Container>     \r\n            {quizValid && renderRedirect()} \r\n\r\n            <Modal\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            {...props}\r\n        >\r\n            <Modal.Header>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Thêm câu hỏi (câu {props.numberOfQuest + 1})\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n            <Row>\r\n                    <Col md={10} sm={12} className=\"offset-md-1 offset-sm-0\">\r\n                        <Form id=\"questionAddForm\" onSubmit={prepareFormSubmit}>\r\n                            <Form.Group className=\"\">\r\n                                <Form.Label>Câu hỏi</Form.Label>\r\n                                <Form.Control as=\"textarea\" required validate=\"Quiz name is not valid!\"\r\n                                onChange={(e) => setQuestion(e.target.value)}/>\r\n                            </Form.Group>\r\n                            <Form.Group className=\"\">\r\n                            <fieldset>\r\n                                <Form.Group as={Row} className=\"mb-3\">\r\n                                <Form.Label as=\"legend\" column sm={2}>\r\n                                    Loại:\r\n                                </Form.Label>\r\n                                <Col sm={12}>\r\n                                    <Form.Check\r\n                                        type=\"radio\"\r\n                                        label=\"Trắc nghiệm\"\r\n                                        name=\"question-type\"\r\n                                        checked={questionType === 0}\r\n                                        onChange={() => handleQuestionTypeChange(0)}\r\n                                    />\r\n                                     <Form.Check\r\n                                        type=\"radio\"\r\n                                        label=\"Trả lời ngắn\"\r\n                                        name=\"question-type\"\r\n                                        checked={questionType === 1}\r\n                                        onChange={() => handleQuestionTypeChange(1)}\r\n                                    />\r\n                                </Col>\r\n                                </Form.Group>\r\n                            </fieldset>\r\n                            </Form.Group>\r\n                            {questionType === 0 && \r\n                                (<Form.Group className=\"\">\r\n                                <Form.Label>Số phương án</Form.Label>\r\n                                <Form.Control \r\n                                    type=\"number\"\r\n                                    validate=\"Phải là giá trị từ 2 đến 5\" \r\n                                    min={2} max={5}\r\n                                    onChange={(e) => handleChoicesCountChange(e.target.value)}\r\n                                />\r\n                                <p className=\"error\">{numberOfChoicesError}</p>\r\n                                </Form.Group>)\r\n                            }\r\n                            {\r\n                                numberOfChoicesError === \"\" && (questionType === 0 && [...Array(parseInt(numberOfChoices))].map((x, i) => {\r\n                                    let getClassName = `question-${numberOfChoices}-answer`;\r\n                                    let idImageName = `file-${i}`\r\n                                    return (\r\n                                        <Form.Group className=\"mt-2\">\r\n                                            <Form.Label>Phương án {i + 1}\r\n                                            <Form.Check\r\n                                                type=\"radio\"\r\n                                                label=\"Đúng\"\r\n                                                name={getClassName}\r\n                                                onChange={() => handleCorrectKeyChange(i)}\r\n                                            />\r\n                                            </Form.Label>\r\n                                            <Form.Control type=\"text\" validate=\"Không hợp lệ!\" minLength={1}\r\n                                            onChange={(e) => handleKeyChange(i, e.target.value)}/>\r\n                                            <Form.Group className=\"mb-3 mt-3\">\r\n                                                <Form.Label>Ảnh phương án (nếu có)</Form.Label><br></br>\r\n                                                <label htmlFor={idImageName} className=\"shareOption\" style={{cursor: \"pointer\"}}>\r\n                                                    <PermMedia htmlColor=\"green\" className=\"shareIcon\"/>\r\n                                                    <Form.Control style={{display: \"none\"}} type=\"file\" id={idImageName} accept=\".png, .jpeg, .jpg\" size=\"sm\" onChange={(e) => handleKeyImage(i, e.target.files[0])}/>\r\n                                                </label>\r\n                                            </Form.Group>\r\n                                            {keyImages[i] && <div className=\"keyImgContainer\">\r\n                                                <img className=\"shareImg\" src={URL.createObjectURL(keyImages[i])} alt=\"\"/>\r\n                                                <Cancel className=\"shareCancelImg\" onClick={() => setImageNull(i)}></Cancel>\r\n                                            </div>}\r\n                                        </Form.Group>\r\n                                    )\r\n                                })) || \r\n                                (questionType === 1 && \r\n                                    <>\r\n                                    <Form.Group className=\"\">\r\n                                        <Form.Label>Đáp án</Form.Label>\r\n                                        <Form.Control type=\"text\" validate=\"Đáp án không hợp lệ!\" minLength={1}\r\n                                        value={type1CurrentInput}\r\n                                        onChange={(e) => handleKeyChange(0, e.target.value)}\r\n                                        onKeyPress={(e) => keyBoxKeyDown(e)}/>\r\n                                    </Form.Group>\r\n                                    {keyType1Choices.length > 0 && \r\n                                    <Paper component=\"ul\">\r\n                                        {keyType1Choices.map((choice, index) => {\r\n                                            return (\r\n                                                <li key={index}>\r\n                                                    <Chip\r\n                                                        label={choice}\r\n                                                        onDelete={() => deleteKeyType1Choice(index)}\r\n                                                    />\r\n                                                </li>\r\n                                            )\r\n                                        })}\r\n                                    </Paper>\r\n                                    }\r\n                                    </>\r\n                                )\r\n                            }\r\n                            <Form.Group className=\"mt-2\">\r\n                                <Form.Label>Giải thích (nếu có)</Form.Label>\r\n                                <Form.Control as=\"textarea\" validate=\"Không hợp lệ!\"\r\n                                onChange={(e) => setExplain(e.target.value)}/>\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mt-2\">\r\n                                <Form.Label>Điểm số</Form.Label>\r\n                                <Form.Control type=\"number\" min={0} validate=\"Không hợp lệ!\"\r\n                                onChange={(e) => setPoint(e.target.value)}/>\r\n                            </Form.Group>\r\n                            {!props.useQuizTime && <Form.Group className=\"mb-3 mt-3\">\r\n                                <Form.Label>Thời gian trả lời (giây): </Form.Label><br></br>\r\n                                <Form.Control \r\n                                    type=\"number\"\r\n                                    min = {1}\r\n                                    onChange={(e) => setTime(e.target.value)} \r\n                                />\r\n                            </Form.Group>}\r\n                            <Form.Group className=\"mb-3 mt-3\">\r\n                                <Form.Label>Ảnh câu hỏi (nếu có)</Form.Label><br></br>\r\n                                <label htmlFor=\"file\" className=\"shareOption\" style={{cursor: \"pointer\"}}>\r\n                                    <PermMedia htmlColor=\"green\" className=\"shareIcon\"/>\r\n                                    <Form.Control style={{display: \"none\"}} type=\"file\" id=\"file\" accept=\".png, .jpeg, .jpg\" size=\"sm\" onChange={(e) => setFile(e.target.files[0])}/>\r\n                                </label>\r\n\r\n                            </Form.Group>\r\n                            </Form>\r\n                            {file && <div className=\"shareImgContainer\">\r\n                                <img className=\"shareImg\" src={URL.createObjectURL(file)} alt=\"\"/>\r\n                                <Cancel className=\"shareCancelImg\" onClick={() => setFile(null)}></Cancel>\r\n                            </div>}\r\n                    </Col>\r\n                </Row>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n            <p className=\"error\">{validateError}</p>\r\n            <Button variant=\"success\" type=\"submit\" form=\"questionAddForm\">Thêm</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n        </>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}