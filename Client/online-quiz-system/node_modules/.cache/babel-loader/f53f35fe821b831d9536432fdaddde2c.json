{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding\\\\Quiz Generator Project\\\\Client\\\\online-quiz-system\\\\src\\\\pages\\\\home\\\\Home.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./home.css\";\nimport { React, useState, useEffect, useContext } from 'react';\nimport axios from \"axios\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport { Row, Col, Container, Card, Button } from \"react-bootstrap\";\nimport QuizCreate from \"./../quiz-create/QuizCreate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n\n  const {\n    user\n  } = useContext(AuthContext);\n  const [mode, setMode] = useState(0);\n  const [publicQuizzes, setPublicQuizzes] = useState([]);\n  const [quizChosen, setQuizChosen] = useState(false);\n  const [quizID, setQuizID] = useState();\n\n  const getQuizzes = async () => {\n    let listOfQuizzes = await axios.get(\"/quiz/public\");\n    listOfQuizzes = JSON.parse(listOfQuizzes.request.response);\n    setPublicQuizzes(listOfQuizzes);\n  };\n\n  const joinQuiz = async quiz_id => {};\n\n  useEffect(() => {\n    getQuizzes();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      className: \"mt-3 mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center\",\n        children: \"List of Quizzes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children:\n        /* Show public quizzes */\n        publicQuizzes.map(quiz => {\n          //Check time\n          let time = \"\";\n\n          if (quiz.quiz_time != 0) {\n            if (quiz.quiz_time > 60) {\n              time = (quiz.quiz_time / 60).toString() + \" phút\";\n            } else {\n              time = quiz.quiz_time.toString() + \" giây\";\n            }\n          }\n\n          return /*#__PURE__*/_jsxDEV(Col, {\n            className: \"quiz-choose-box p-2\",\n            lg: 4,\n            sm: 6,\n            md: 6,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              style: {\n                width: 'auto'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n                variant: \"top\",\n                src: \"https://images-na.ssl-images-amazon.com/images/I/71k5kfdB9KL.png\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                  className: \"text-center\",\n                  children: /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: quiz.quiz_title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 53,\n                    columnNumber: 77\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                  className: \"quiz-info\",\n                  children: [\"T\\u1EA1o b\\u1EDFi: \", quiz.fullname, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 55,\n                    columnNumber: 70\n                  }, this), \"S\\u1ED1 c\\xE2u h\\u1ECFi: \", quiz.number_of_quests, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 56,\n                    columnNumber: 81\n                  }, this), \"Th\\u1EDDi gian: \", time]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"info\",\n                  className: \"text-white\",\n                  onClick: () => joinQuiz(quiz.id),\n                  children: \"Tham gia\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), quizChosen ? /*#__PURE__*/_jsxDEV(Redirect, {\n      push: true,\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 29\n    }, this) : null]\n  }, void 0, true);\n}\n\n_s(Home, \"Yn+qyPBP1xuhiJuVn1TdMz0IFm0=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["D:/Coding/Quiz Generator Project/Client/online-quiz-system/src/pages/home/Home.jsx"],"names":["React","useState","useEffect","useContext","axios","AuthContext","Row","Col","Container","Card","Button","QuizCreate","Home","user","mode","setMode","publicQuizzes","setPublicQuizzes","quizChosen","setQuizChosen","quizID","setQuizID","getQuizzes","listOfQuizzes","get","JSON","parse","request","response","joinQuiz","quiz_id","map","quiz","time","quiz_time","toString","width","quiz_title","fullname","number_of_quests","id"],"mappings":"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","sourcesContent":["import \"./home.css\";\r\nimport {React, useState, useEffect, useContext} from 'react';\r\nimport axios from \"axios\";\r\nimport {AuthContext} from \"../../context/AuthContext\";\r\nimport {Row, Col, Container, Card, Button} from \"react-bootstrap\";\r\n\r\nimport QuizCreate from \"./../quiz-create/QuizCreate\";\r\n\r\n\r\nexport default function Home() {\r\n    const {user} = useContext(AuthContext);\r\n    const [mode, setMode] = useState(0);\r\n    const [publicQuizzes, setPublicQuizzes] = useState([]);\r\n    const [quizChosen, setQuizChosen] = useState(false);\r\n    const [quizID, setQuizID] = useState();\r\n\r\n    const getQuizzes = async() => {\r\n        let listOfQuizzes = await axios.get(\"/quiz/public\");\r\n        listOfQuizzes = JSON.parse(listOfQuizzes.request.response);\r\n        setPublicQuizzes(listOfQuizzes);\r\n    }\r\n\r\n    const joinQuiz = async(quiz_id) => {\r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n        getQuizzes();    \r\n    }, [])\r\n    \r\n    return (\r\n        <>\r\n            <Container className=\"mt-3 mb-3\">\r\n                <h1 className=\"text-center\">List of Quizzes</h1>\r\n                <Row>\r\n                    {\r\n                        /* Show public quizzes */\r\n                        publicQuizzes.map(quiz => {\r\n                            //Check time\r\n                            let time = \"\";\r\n                            if (quiz.quiz_time != 0) {\r\n                                if (quiz.quiz_time > 60) {\r\n                                    time = (quiz.quiz_time / 60).toString() + \" phút\";\r\n                                } else {\r\n                                    time = (quiz.quiz_time).toString() + \" giây\";\r\n                                }\r\n                            }\r\n                            return (\r\n                                <Col className=\"quiz-choose-box p-2\" lg={4} sm={6} md={6} xs={12}>\r\n                                    <Card style={{ width: 'auto' }}>\r\n                                    <Card.Img variant=\"top\" src=\"https://images-na.ssl-images-amazon.com/images/I/71k5kfdB9KL.png\"/>\r\n                                    <Card.Body>\r\n                                        <Card.Title className=\"text-center\"><b>{quiz.quiz_title}</b></Card.Title>\r\n                                        <Card.Text className=\"quiz-info\">\r\n                                            Tạo bởi: {quiz.fullname} <br></br>\r\n                                            Số câu hỏi: {quiz.number_of_quests} <br/>\r\n                                            Thời gian: {time}\r\n                                        </Card.Text>\r\n                                        <Button variant=\"info\" className=\"text-white\" onClick={() => joinQuiz(quiz.id)}>Tham gia</Button>\r\n                                    </Card.Body>\r\n                                    </Card>\r\n                                </Col>\r\n                            )\r\n                        })\r\n                    }\r\n                </Row>\r\n            </Container>      \r\n            { quizChosen ? (<Redirect push to=\"/\"/>) : null }    \r\n        </>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}