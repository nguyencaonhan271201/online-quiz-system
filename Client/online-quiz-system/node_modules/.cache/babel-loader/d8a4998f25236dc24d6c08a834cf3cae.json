{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding\\\\Online Quiz System\\\\online-quiz-system\\\\Client\\\\online-quiz-system\\\\src\\\\components\\\\quiz-review\\\\QuizReview.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./quiz-review.css\";\nimport { React, useState, useEffect, useRef } from 'react';\nimport { Container, Row, Col, Form } from \"react-bootstrap\";\nimport { Chip, Paper } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction QuizReview(props) {\n  _s();\n\n  const [markContent, setMarkContent] = useState([]);\n  const [questions, setQuestions] = useState([]);\n  const [quizInfo, setQuizInfo] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  useEffect(() => {\n    setMarkContent(props.reviewContent);\n    setQuestions(props.questions);\n    setQuizInfo(props.quizInfo);\n  }, []);\n  useEffect(() => {\n    if (questions.length > 0) {\n      setLoaded(true);\n      console.log(questions);\n    }\n  }, [markContent]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loaded && /*#__PURE__*/_jsxDEV(Container, {\n      className: \"mt-3 mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center\",\n        children: quizInfo.quiz_title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-center\",\n        children: [\"T\\u1EA1o b\\u1EDFi: \", quizInfo.creator]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), questions.map((question, i) => {})]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 24\n    }, this)\n  }, void 0, false);\n}\n\n_s(QuizReview, \"TrLxwnwn8cS95OLlrIQNjLfdqDQ=\");\n\n_c = QuizReview;\nexport default QuizReview;\n/*\r\n                        {question.media != \"\" && <div className=\"text-center mt-2\">\r\n                            <img className=\"img-quest\" src={question.media}></img>\r\n                        </div>}\r\n                        {question.question_type == 1 && \r\n                        <div>\r\n                            <Form.Control value={markContent[i].answer} disabled=\"true\" type=\"text\" className=\"mt-2\" placeholder=\"Câu trả lời\">\r\n                            </Form.Control>\r\n                            <div className=\"text-center mt-1\">\r\n                                {\r\n                                    <>\r\n                                    <p>Đáp án:</p>\r\n                                    <Paper component=\"ul\">\r\n                                        {Buffer(question.answers[0].answer_content, \"base64\").toString(\"utf-8\").split(\"~|\")\r\n                                        .map((choice, index) => {\r\n                                            return (\r\n                                                <li key={index}>\r\n                                                    <Chip\r\n                                                        label={choice}\r\n                                                    />\r\n                                                </li>\r\n                                            )\r\n                                        })}\r\n                                    </Paper>\r\n                                    </>\r\n                                }\r\n                                <h5>{Buffer(question.explanation, \"base64\").toString(\"utf-8\")}</h5>\r\n                            </div>\r\n                        </div>}\r\n                        {question.question_type == 0 && \r\n                            <Row className=\"mt-2\">\r\n                                {\r\n                                    question.answers.map((answer, j) => {\r\n                                        let chosen = \"\";\r\n                                        if (answer.id !== markContent[i].answer) {\r\n                                            if (answer.is_correct === 1) {\r\n                                                chosen = \"answer-content text-center correct\";\r\n                                            } else {\r\n                                                chosen = \"answer-content text-center\";\r\n                                            }\r\n                                        } else {\r\n                                            if (answer.is_correct === 1) {\r\n                                                chosen = \"answer-content text-center correct\";\r\n                                            } else {\r\n                                                chosen = \"answer-content text-center wrong\";\r\n                                            }\r\n                                        }\r\n                                        return (\r\n                                            <Col lg={6} md={6} sm={12} className=\"p-1 answer\">\r\n                                                <div className={chosen}>\r\n                                                    {answer.media != \"\" && <img className=\"img-answer\" src={answer.media}></img>}\r\n                                                    {Buffer(answer.answer_content, \"base64\").toString(\"utf-8\")}\r\n                                                </div>\r\n                                            </Col>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </Row>\r\n                        }\r\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"QuizReview\");","map":{"version":3,"sources":["D:/Coding/Online Quiz System/online-quiz-system/Client/online-quiz-system/src/components/quiz-review/QuizReview.jsx"],"names":["React","useState","useEffect","useRef","Container","Row","Col","Form","Chip","Paper","QuizReview","props","markContent","setMarkContent","questions","setQuestions","quizInfo","setQuizInfo","loaded","setLoaded","reviewContent","length","console","log","quiz_title","creator","map","question","i"],"mappings":";;;AAAA,OAAO,mBAAP;AACA,SAAQA,KAAR,EAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,MAApC,QAAiD,OAAjD;AACA,SAAQC,SAAR,EAAmBC,GAAnB,EAAwBC,GAAxB,EAA6BC,IAA7B,QAAwC,iBAAxC;AACA,SAAQC,IAAR,EAAcC,KAAd,QAA0B,mBAA1B;;;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACvB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACiB,MAAD,EAASC,SAAT,IAAsBlB,QAAQ,CAAC,KAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,cAAc,CAACF,KAAK,CAACS,aAAP,CAAd;AACAL,IAAAA,YAAY,CAACJ,KAAK,CAACG,SAAP,CAAZ;AACAG,IAAAA,WAAW,CAACN,KAAK,CAACK,QAAP,CAAX;AACH,GAJQ,EAIN,EAJM,CAAT;AAMAd,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIY,SAAS,CAACO,MAAV,GAAmB,CAAvB,EAA0B;AACtBF,MAAAA,SAAS,CAAC,IAAD,CAAT;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYT,SAAZ;AACH;AACJ,GALQ,EAKN,CAACF,WAAD,CALM,CAAT;AAOA,sBACI;AAAA,cACKM,MAAM,iBAAI,QAAC,SAAD;AAAW,MAAA,SAAS,EAAC,WAArB;AAAA,8BACP;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA,kBAA6BF,QAAQ,CAACQ;AAAtC;AAAA;AAAA;AAAA;AAAA,cADO,eAEP;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA,0CAAsCR,QAAQ,CAACS,OAA/C;AAAA;AAAA;AAAA;AAAA;AAAA,cAFO,EAGNX,SAAS,CAACY,GAAV,CAAc,CAACC,QAAD,EAAWC,CAAX,KAAiB,CAE/B,CAFA,CAHM;AAAA;AAAA;AAAA;AAAA;AAAA;AADf,mBADJ;AAYH;;GA/BQlB,U;;KAAAA,U;AAiCT,eAAeA,UAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import \"./quiz-review.css\";\r\nimport {React, useState, useEffect, useRef} from 'react'\r\nimport {Container, Row, Col, Form} from \"react-bootstrap\";\r\nimport {Chip, Paper} from '@material-ui/core';\r\n\r\nfunction QuizReview(props) {\r\n    const [markContent, setMarkContent] = useState([]);\r\n    const [questions, setQuestions] = useState([]);\r\n    const [quizInfo, setQuizInfo] = useState([]);\r\n    const [loaded, setLoaded] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setMarkContent(props.reviewContent);\r\n        setQuestions(props.questions);\r\n        setQuizInfo(props.quizInfo);\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (questions.length > 0) {\r\n            setLoaded(true);\r\n            console.log(questions);\r\n        }\r\n    }, [markContent])\r\n\r\n    return (\r\n        <>\r\n            {loaded && <Container className=\"mt-3 mb-3\">\r\n                <h1 className=\"text-center\">{quizInfo.quiz_title}</h1>\r\n                <h3 className=\"text-center\">Tạo bởi: {quizInfo.creator}</h3>\r\n                {questions.map((question, i) => {\r\n                    \r\n                })\r\n                }\r\n            </Container>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default QuizReview\r\n\r\n/*\r\n                        {question.media != \"\" && <div className=\"text-center mt-2\">\r\n                            <img className=\"img-quest\" src={question.media}></img>\r\n                        </div>}\r\n                        {question.question_type == 1 && \r\n                        <div>\r\n                            <Form.Control value={markContent[i].answer} disabled=\"true\" type=\"text\" className=\"mt-2\" placeholder=\"Câu trả lời\">\r\n                            </Form.Control>\r\n                            <div className=\"text-center mt-1\">\r\n                                {\r\n                                    <>\r\n                                    <p>Đáp án:</p>\r\n                                    <Paper component=\"ul\">\r\n                                        {Buffer(question.answers[0].answer_content, \"base64\").toString(\"utf-8\").split(\"~|\")\r\n                                        .map((choice, index) => {\r\n                                            return (\r\n                                                <li key={index}>\r\n                                                    <Chip\r\n                                                        label={choice}\r\n                                                    />\r\n                                                </li>\r\n                                            )\r\n                                        })}\r\n                                    </Paper>\r\n                                    </>\r\n                                }\r\n                                <h5>{Buffer(question.explanation, \"base64\").toString(\"utf-8\")}</h5>\r\n                            </div>\r\n                        </div>}\r\n                        {question.question_type == 0 && \r\n                            <Row className=\"mt-2\">\r\n                                {\r\n                                    question.answers.map((answer, j) => {\r\n                                        let chosen = \"\";\r\n                                        if (answer.id !== markContent[i].answer) {\r\n                                            if (answer.is_correct === 1) {\r\n                                                chosen = \"answer-content text-center correct\";\r\n                                            } else {\r\n                                                chosen = \"answer-content text-center\";\r\n                                            }\r\n                                        } else {\r\n                                            if (answer.is_correct === 1) {\r\n                                                chosen = \"answer-content text-center correct\";\r\n                                            } else {\r\n                                                chosen = \"answer-content text-center wrong\";\r\n                                            }\r\n                                        }\r\n                                        return (\r\n                                            <Col lg={6} md={6} sm={12} className=\"p-1 answer\">\r\n                                                <div className={chosen}>\r\n                                                    {answer.media != \"\" && <img className=\"img-answer\" src={answer.media}></img>}\r\n                                                    {Buffer(answer.answer_content, \"base64\").toString(\"utf-8\")}\r\n                                                </div>\r\n                                            </Col>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </Row>\r\n                        }\r\n*/"]},"metadata":{},"sourceType":"module"}