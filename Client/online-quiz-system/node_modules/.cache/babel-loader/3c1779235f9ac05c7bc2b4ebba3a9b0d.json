{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding\\\\Quiz Generator Project\\\\Client\\\\online-quiz-system\\\\src\\\\pages\\\\quiz-create\\\\QuizCreate.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./quizcreate.css\";\nimport { React, useState } from 'react';\nimport QuestionAddModal from \"./../../components/question-add-modal/QuestionAddModal\"; //Bootstrap\n\nimport { Container, Col, Row, Form, Button, Modal } from \"react-bootstrap\"; //Material UI icons\n\nimport { Add } from \"@material-ui/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function QuizCreate() {\n  _s();\n\n  const [quizMode, setQuizMode] = useState(0);\n  const [numberOfQuest, setNumberOfQuest] = useState(0);\n  const [useQuizTime, setUseQuizTime] = useState(false);\n  const [questionList, setQuestionList] = useState([]);\n  const [addQuestionModalShow, setAddQuestionModalShow] = useState(false);\n\n  const onQuizModeChange = type => {\n    setQuizMode(type);\n  };\n\n  const onAddQuestionSubmit = input => {\n    console.log(input);\n    [...questionList].concat(input);\n    setTimeout(() => {\n      console.log(questionList);\n    }, 3000);\n    setNumberOfQuest(questionList.length);\n    questionList.map(question => {\n      console.log(question);\n    });\n    setAddQuestionModalShow(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      className: \"p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center\",\n        children: \"T\\u1EA1o Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: 8,\n          sm: 12,\n          className: \"offset-md-2 offset-sm-0\",\n          children: [/*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"formBasicEmail\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Ti\\xEAu \\u0111\\u1EC1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                required: true,\n                validate: \"Quiz name is not valid!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Row,\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  as: \"legend\",\n                  column: true,\n                  sm: 12,\n                  children: \"Ch\\u1EBF \\u0111\\u1ED9:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 12,\n                  children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n                    type: \"radio\",\n                    label: \"C\\xF4ng khai\",\n                    name: \"quiz-mode\",\n                    checked: quizMode == 0,\n                    onChange: () => onQuizModeChange(0)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 53,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n                    type: \"radio\",\n                    label: \"Ri\\xEAng t\\u01B0\",\n                    name: \"quiz-mode\",\n                    checked: quizMode == 1,\n                    onChange: () => onQuizModeChange(1)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 60,\n                    columnNumber: 38\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"formBasicEmail\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"M\\u1EADt kh\\u1EA9u\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                validate: \"Quiz password is not valid!\",\n                minLength: 6,\n                maxLength: 10,\n                disabled: quizMode == 0 && \"disabled\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"formBasicEmail\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n                label: \"Th\\u1EDDi gian (ph\\xFAt)\",\n                onChange: () => setUseQuizTime(!useQuizTime)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"number\",\n                min: 1,\n                validate: \"Quiz password is not valid!\",\n                disabled: !useQuizTime && \"disabled\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n                label: \"Gi\\u1EEF th\\u1EE9 t\\u1EF1 c\\xE2u h\\u1ECFi\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n                muted: true,\n                children: \"N\\u1EBFu kh\\xF4ng ch\\u1ECDn, c\\xE2u h\\u1ECFi s\\u1EBD \\u0111\\u01B0\\u1EE3c s\\u1EAFp x\\u1EBFp ng\\u1EABu nhi\\xEAn.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            className: \"mt-2\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"info\",\n              className: \"btn-block\",\n              onClick: () => setAddQuestionModalShow(true),\n              children: /*#__PURE__*/_jsxDEV(Add, {\n                fontSize: \"small\",\n                style: {\n                  color: \"white\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mt-2\",\n              children: [\"S\\u1ED1 l\\u01B0\\u1EE3ng c\\xE2u h\\u1ECFi: \", numberOfQuest]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(QuestionAddModal, {\n      show: addQuestionModalShow,\n      onHide: () => setAddQuestionModalShow(false),\n      numberOfQuest: numberOfQuest,\n      onAddQuestionSubmit: onAddQuestionSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_s(QuizCreate, \"gYlk3KYEfpS2ly3KR07DXrNAChE=\");\n\n_c = QuizCreate;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuizCreate\");","map":{"version":3,"sources":["D:/Coding/Quiz Generator Project/Client/online-quiz-system/src/pages/quiz-create/QuizCreate.jsx"],"names":["React","useState","QuestionAddModal","Container","Col","Row","Form","Button","Modal","Add","QuizCreate","quizMode","setQuizMode","numberOfQuest","setNumberOfQuest","useQuizTime","setUseQuizTime","questionList","setQuestionList","addQuestionModalShow","setAddQuestionModalShow","onQuizModeChange","type","onAddQuestionSubmit","input","console","log","concat","setTimeout","length","map","question","color"],"mappings":"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","sourcesContent":["import \"./quizcreate.css\";\r\nimport {React, useState} from 'react'\r\nimport QuestionAddModal from \"./../../components/question-add-modal/QuestionAddModal\";\r\n\r\n//Bootstrap\r\nimport {Container, Col, Row, Form, Button, Modal} from \"react-bootstrap\";\r\n\r\n//Material UI icons\r\nimport {Add} from \"@material-ui/icons\";  \r\n\r\nexport default function QuizCreate() {\r\n    const [quizMode, setQuizMode] = useState(0);\r\n    const [numberOfQuest, setNumberOfQuest] = useState(0)\r\n    const [useQuizTime, setUseQuizTime] = useState(false);\r\n    const [questionList, setQuestionList] = useState([]);\r\n    const [addQuestionModalShow, setAddQuestionModalShow] = useState(false);\r\n\r\n    const onQuizModeChange = (type) => {\r\n        setQuizMode(type);\r\n    }\r\n\r\n    const onAddQuestionSubmit = (input) => {\r\n        console.log(input);\r\n        [...questionList].concat(input);\r\n        setTimeout(() => {\r\n            console.log(questionList);\r\n        }, 3000);\r\n        setNumberOfQuest(questionList.length);\r\n        questionList.map(question => {\r\n            console.log(question);\r\n        })\r\n        setAddQuestionModalShow(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Container className=\"p-4\">\r\n                <h1 className=\"text-center\">Tạo Quiz</h1>\r\n\r\n                <Row>\r\n                    <Col md={8} sm={12} className=\"offset-md-2 offset-sm-0\">\r\n                        <Form>\r\n                            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                                <Form.Label>Tiêu đề</Form.Label>\r\n                                <Form.Control type=\"text\" required validate=\"Quiz name is not valid!\"/>\r\n                            </Form.Group>\r\n                            <fieldset>\r\n                                <Form.Group as={Row} className=\"mb-3\">\r\n                                <Form.Label as=\"legend\" column sm={12}>\r\n                                    Chế độ:\r\n                                </Form.Label>\r\n                                <Col sm={12}>\r\n                                    <Form.Check\r\n                                        type=\"radio\"\r\n                                        label=\"Công khai\"\r\n                                        name=\"quiz-mode\"\r\n                                        checked={quizMode == 0}\r\n                                        onChange={() => onQuizModeChange(0)}\r\n                                    />\r\n                                     <Form.Check\r\n                                        type=\"radio\"\r\n                                        label=\"Riêng tư\"\r\n                                        name=\"quiz-mode\"\r\n                                        checked={quizMode == 1}\r\n                                        onChange={() => onQuizModeChange(1)}\r\n                                    />\r\n                                </Col>\r\n                                </Form.Group>\r\n                            </fieldset>\r\n                            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                                <Form.Label>Mật khẩu</Form.Label>\r\n                                <Form.Control \r\n                                    type=\"text\"\r\n                                    validate=\"Quiz password is not valid!\" \r\n                                    minLength={6} maxLength={10}\r\n                                    disabled = {quizMode == 0 && \"disabled\"}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                                <Form.Check \r\n                                    label=\"Thời gian (phút)\" \r\n                                    onChange = {() => setUseQuizTime(!useQuizTime)} \r\n                                />\r\n                                <Form.Control \r\n                                    type=\"number\"\r\n                                    min = {1}\r\n                                    validate=\"Quiz password is not valid!\" \r\n                                    disabled = {!useQuizTime && \"disabled\"}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Form.Check \r\n                                    label=\"Giữ thứ tự câu hỏi\" \r\n                                />\r\n                                <Form.Text muted>\r\n                                    Nếu không chọn, câu hỏi sẽ được sắp xếp ngẫu nhiên.\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                        </Form>\r\n                        <Row className=\"mt-2\">\r\n                            <Button variant=\"info\" className=\"btn-block\" onClick={() => setAddQuestionModalShow(true)}>\r\n                                <Add fontSize=\"small\" style={{ color: \"white\"}}></Add>\r\n                            </Button>\r\n                            <p className=\"mt-2\" >Số lượng câu hỏi: {numberOfQuest}</p>\r\n                            {\r\n                            \r\n                            }\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n\r\n            <QuestionAddModal\r\n                show={addQuestionModalShow}\r\n                onHide={() => setAddQuestionModalShow(false)}\r\n                numberOfQuest={numberOfQuest}\r\n                onAddQuestionSubmit={onAddQuestionSubmit}\r\n            >\r\n\r\n            </QuestionAddModal>\r\n\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}