{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding\\\\Quiz Generator Project\\\\Client\\\\online-quiz-system\\\\src\\\\pages\\\\home\\\\Home.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./home.css\";\nimport { React, useState, useEffect, useContext } from 'react';\nimport axios from \"axios\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport { Row, Col, Container } from \"react-bootstrap\";\nimport QuizCreate from \"./../quiz-create/QuizCreate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n\n  const {\n    user\n  } = useContext(AuthContext);\n  const [mode, setMode] = useState(0);\n  const [publicQuizzes, setPublicQuizzes] = useState([]);\n  const [privateQuizzes, setPrivateQuizzes] = useState([]);\n\n  const getQuizzes = async () => {\n    let listOfQuizzes = await axios.get(\"/quiz/public\");\n    listOfQuizzes = JSON.parse(listOfQuizzes.request.response);\n    let getPublic = [];\n    let getPrivate = [];\n    listOfQuizzes.map(quiz => {\n      if (quiz.quiz_mode === 0) {\n        getPublic.push(quiz);\n      } else {\n        getPrivate.push(quiz);\n      }\n    });\n    setPublicQuizzes(getPublic);\n    setPrivateQuizzes(getPrivate);\n  };\n\n  useEffect(() => {\n    getQuizzes();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center\",\n        children: \"List of Quizzes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children:\n        /* Show public quizzes */\n        publicQuizzes.map(quiz => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: quiz.quiz_title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(Home, \"KEcC+z2EO/TU372g7WEhe/82zKQ=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["D:/Coding/Quiz Generator Project/Client/online-quiz-system/src/pages/home/Home.jsx"],"names":["React","useState","useEffect","useContext","axios","AuthContext","Row","Col","Container","QuizCreate","Home","user","mode","setMode","publicQuizzes","setPublicQuizzes","privateQuizzes","setPrivateQuizzes","getQuizzes","listOfQuizzes","get","JSON","parse","request","response","getPublic","getPrivate","map","quiz","quiz_mode","push","quiz_title"],"mappings":";;;AAAA,OAAO,YAAP;AACA,SAAQA,KAAR,EAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,UAApC,QAAqD,OAArD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,QAA0B,2BAA1B;AACA,SAAQC,GAAR,EAAaC,GAAb,EAAkBC,SAAlB,QAAkC,iBAAlC;AAEA,OAAOC,UAAP,MAAuB,6BAAvB;;;AAGA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC3B,QAAM;AAACC,IAAAA;AAAD,MAASR,UAAU,CAACE,WAAD,CAAzB;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACa,aAAD,EAAgBC,gBAAhB,IAAoCd,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACe,cAAD,EAAiBC,iBAAjB,IAAsChB,QAAQ,CAAC,EAAD,CAApD;;AAEA,QAAMiB,UAAU,GAAG,YAAW;AAC1B,QAAIC,aAAa,GAAG,MAAMf,KAAK,CAACgB,GAAN,CAAU,cAAV,CAA1B;AACAD,IAAAA,aAAa,GAAGE,IAAI,CAACC,KAAL,CAAWH,aAAa,CAACI,OAAd,CAAsBC,QAAjC,CAAhB;AACA,QAAIC,SAAS,GAAG,EAAhB;AACA,QAAIC,UAAU,GAAG,EAAjB;AACAP,IAAAA,aAAa,CAACQ,GAAd,CAAkBC,IAAI,IAAI;AACtB,UAAIA,IAAI,CAACC,SAAL,KAAmB,CAAvB,EAA0B;AACtBJ,QAAAA,SAAS,CAACK,IAAV,CAAeF,IAAf;AACH,OAFD,MAEO;AACHF,QAAAA,UAAU,CAACI,IAAX,CAAgBF,IAAhB;AACH;AACJ,KAND;AAOAb,IAAAA,gBAAgB,CAACU,SAAD,CAAhB;AACAR,IAAAA,iBAAiB,CAACS,UAAD,CAAjB;AACH,GAdD;;AAgBAxB,EAAAA,SAAS,CAAC,MAAM;AACZgB,IAAAA,UAAU;AACb,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI;AAAA,2BACI,QAAC,SAAD;AAAW,MAAA,SAAS,EAAC,MAArB;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,GAAD;AAAA;AAEQ;AACAJ,QAAAA,aAAa,CAACa,GAAd,CAAkBC,IAAI,IAAI;AACtB,8BACI;AAAA,sBAAMA,IAAI,CAACG;AAAX;AAAA;AAAA;AAAA;AAAA,kBADJ;AAGH,SAJD;AAHR;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAmBH;;GA7CuBrB,I;;KAAAA,I","sourcesContent":["import \"./home.css\";\r\nimport {React, useState, useEffect, useContext} from 'react';\r\nimport axios from \"axios\";\r\nimport {AuthContext} from \"../../context/AuthContext\";\r\nimport {Row, Col, Container} from \"react-bootstrap\";\r\n\r\nimport QuizCreate from \"./../quiz-create/QuizCreate\";\r\n\r\n\r\nexport default function Home() {\r\n    const {user} = useContext(AuthContext);\r\n    const [mode, setMode] = useState(0);\r\n    const [publicQuizzes, setPublicQuizzes] = useState([]);\r\n    const [privateQuizzes, setPrivateQuizzes] = useState([]);\r\n\r\n    const getQuizzes = async() => {\r\n        let listOfQuizzes = await axios.get(\"/quiz/public\");\r\n        listOfQuizzes = JSON.parse(listOfQuizzes.request.response);\r\n        let getPublic = [];\r\n        let getPrivate = [];\r\n        listOfQuizzes.map(quiz => {\r\n            if (quiz.quiz_mode === 0) {\r\n                getPublic.push(quiz);\r\n            } else {\r\n                getPrivate.push(quiz);\r\n            }\r\n        });\r\n        setPublicQuizzes(getPublic);\r\n        setPrivateQuizzes(getPrivate);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getQuizzes();    \r\n    }, [])\r\n    \r\n    return (\r\n        <>\r\n            <Container className=\"mt-3\">\r\n                <h1 className=\"text-center\">List of Quizzes</h1>\r\n                <Row>\r\n                    {\r\n                        /* Show public quizzes */\r\n                        publicQuizzes.map(quiz => {\r\n                            return (\r\n                                <div>{quiz.quiz_title}</div>\r\n                            )\r\n                        })\r\n                    }\r\n                </Row>\r\n            </Container>\r\n            {}\r\n            \r\n        </>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}