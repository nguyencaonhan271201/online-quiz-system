{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding\\\\Quiz Generator Project\\\\Client\\\\online-quiz-system\\\\src\\\\pages\\\\quiz-create\\\\QuizCreate.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./quizcreate.css\";\nimport { React, useState, useEffect } from 'react';\nimport QuestionAddModal from \"./../../components/question-add-modal/QuestionAddModal\"; //Bootstrap\n\nimport { Container, Col, Row, Form, Button } from \"react-bootstrap\"; //Material UI icons\n\nimport { Add } from \"@material-ui/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function QuizCreate() {\n  _s();\n\n  const [quizTitle, setQuizTitle] = useState(\"\");\n  const [quizMode, setQuizMode] = useState(0);\n  const [numberOfQuest, setNumberOfQuest] = useState(0);\n  const [useQuizTime, setUseQuizTime] = useState(false);\n  const [questionList, setQuestionList] = useState([]);\n  const [addQuestionModalShow, setAddQuestionModalShow] = useState(false);\n  const [submittedQuizDetails, setSubmittedQuizDetails] = useState(false);\n\n  const onQuizModeChange = type => {\n    setQuizMode(type);\n  };\n\n  const onAddQuestionSubmit = input => {\n    setQuestionList([...questionList, input]);\n    setAddQuestionModalShow(false);\n  };\n\n  useEffect(() => {\n    setNumberOfQuest(questionList.length);\n  }, [questionList]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      className: \"p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center\",\n        children: \"T\\u1EA1o Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: 8,\n          sm: 12,\n          className: \"offset-md-2 offset-sm-0\",\n          children: [/*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-2\",\n              controlId: \"formBasicEmail\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Ti\\xEAu \\u0111\\u1EC1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                required: true,\n                validate: \"Quiz name is not valid!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Row,\n                className: \"mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  as: \"legend\",\n                  column: true,\n                  sm: 12,\n                  children: \"Ch\\u1EBF \\u0111\\u1ED9:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 12,\n                  children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n                    type: \"radio\",\n                    label: \"C\\xF4ng khai\",\n                    name: \"quiz-mode\",\n                    checked: quizMode === 0,\n                    onChange: () => onQuizModeChange(0)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 51,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n                    type: \"radio\",\n                    label: \"Ri\\xEAng t\\u01B0\",\n                    name: \"quiz-mode\",\n                    checked: quizMode === 1,\n                    onChange: () => onQuizModeChange(1)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 58,\n                    columnNumber: 38\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-2\",\n              controlId: \"formBasicEmail\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"M\\u1EADt kh\\u1EA9u\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                validate: \"Quiz password is not valid!\",\n                minLength: 6,\n                maxLength: 10,\n                disabled: quizMode === 0 && \"disabled\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-2\",\n              controlId: \"formBasicEmail\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n                label: \"Th\\u1EDDi gian (ph\\xFAt)\",\n                onChange: () => setUseQuizTime(!useQuizTime)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n                muted: true,\n                children: \"L\\u1EF1a ch\\u1ECDn v\\xE0 nh\\u1EADp th\\u1EDDi gian l\\xE0m b\\xE0i cho to\\xE0n b\\u1ED9 quiz ho\\u1EB7c kh\\xF4ng l\\u1EF1a ch\\u1ECDn v\\xE0 \\u0111\\u1EB7t th\\u1EDDi gian ri\\xEAng l\\u1EBB cho t\\u1EEBng c\\xE2u h\\u1ECFi.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"number\",\n                min: 1,\n                validate: \"Quiz password is not valid!\",\n                disabled: !useQuizTime && \"disabled\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n                label: \"Gi\\u1EEF th\\u1EE9 t\\u1EF1 c\\xE2u h\\u1ECFi\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n                muted: true,\n                children: \"N\\u1EBFu kh\\xF4ng ch\\u1ECDn, c\\xE2u h\\u1ECFi s\\u1EBD \\u0111\\u01B0\\u1EE3c s\\u1EAFp x\\u1EBFp ng\\u1EABu nhi\\xEAn.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"warning\",\n              type: \"submit\",\n              className: \"btn-3\",\n              children: \"X\\xE1c nh\\u1EADn th\\xF4ng tin Quiz\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this), submittedQuizDetails && /*#__PURE__*/_jsxDEV(Row, {\n            className: \"mt-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-center\",\n              children: \"C\\xE2u h\\u1ECFi\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"info\",\n              className: \"btn-block\",\n              onClick: () => setAddQuestionModalShow(true),\n              children: /*#__PURE__*/_jsxDEV(Add, {\n                fontSize: \"small\",\n                style: {\n                  color: \"white\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mt-2\",\n              children: [\"S\\u1ED1 l\\u01B0\\u1EE3ng c\\xE2u h\\u1ECFi: \", numberOfQuest]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this), questionList.map((quest, index) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-2 mb-2 questionBox\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"quest-title\",\n                  children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                    children: [\"C\\xE2u \", index + 1, \": \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 114,\n                    columnNumber: 72\n                  }, this), quest[\"question\"]]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 45\n                }, this), quest[\"image\"] !== \"\" && /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"question-image\",\n                  alt: \"\",\n                  src: quest[\"image\"]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"quest-content\",\n                  children: [quest[\"questionType\"] === 1 && /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"\\u0110\\xE1p \\xE1n: \", quest[\"keys\"][0]]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 120,\n                    columnNumber: 53\n                  }, this), quest[\"questionType\"] === 0 && quest[\"keys\"].map((key, index) => {\n                    return /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: quest[\"keyCorrects\"][index] ? \"correct-key\" : \"incorrect-key\",\n                      children: [\"Ph\\u01B0\\u01A1ng \\xE1n \", index + 1, \": \", key]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 125,\n                      columnNumber: 57\n                    }, this);\n                  }), quest[\"explain\"] !== \"\" && /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Gi\\u1EA3i th\\xEDch: \", quest[\"explain\"]]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 131,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 45\n                }, this)]\n              }, quest[\"question\"], true, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 41\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 51\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(QuestionAddModal, {\n      show: addQuestionModalShow,\n      onHide: () => setAddQuestionModalShow(false),\n      numberOfQuest: numberOfQuest,\n      onAddQuestionSubmit: onAddQuestionSubmit,\n      useQuizTime: useQuizTime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n\n_s(QuizCreate, \"5yRAkdMF9GRKvtm+1FzfnaNlN4s=\");\n\n_c = QuizCreate;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuizCreate\");","map":{"version":3,"sources":["D:/Coding/Quiz Generator Project/Client/online-quiz-system/src/pages/quiz-create/QuizCreate.jsx"],"names":["React","useState","useEffect","QuestionAddModal","Container","Col","Row","Form","Button","Add","QuizCreate","quizTitle","setQuizTitle","quizMode","setQuizMode","numberOfQuest","setNumberOfQuest","useQuizTime","setUseQuizTime","questionList","setQuestionList","addQuestionModalShow","setAddQuestionModalShow","submittedQuizDetails","setSubmittedQuizDetails","onQuizModeChange","type","onAddQuestionSubmit","input","length","color","map","quest","index","key"],"mappings":"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","sourcesContent":["import \"./quizcreate.css\";\r\nimport {React, useState, useEffect} from 'react'\r\nimport QuestionAddModal from \"./../../components/question-add-modal/QuestionAddModal\";\r\n\r\n//Bootstrap\r\nimport {Container, Col, Row, Form, Button} from \"react-bootstrap\";\r\n\r\n//Material UI icons\r\nimport {Add} from \"@material-ui/icons\";  \r\n\r\nexport default function QuizCreate() {\r\n    const [quizTitle, setQuizTitle] = useState(\"\");\r\n    const [quizMode, setQuizMode] = useState(0);\r\n    const [numberOfQuest, setNumberOfQuest] = useState(0)\r\n    const [useQuizTime, setUseQuizTime] = useState(false);\r\n    const [questionList, setQuestionList] = useState([]);\r\n    const [addQuestionModalShow, setAddQuestionModalShow] = useState(false);\r\n    const [submittedQuizDetails, setSubmittedQuizDetails] = useState(false);\r\n\r\n    const onQuizModeChange = (type) => {\r\n        setQuizMode(type);\r\n    }\r\n\r\n    const onAddQuestionSubmit = (input) => {\r\n        setQuestionList([...questionList, input]);\r\n        setAddQuestionModalShow(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setNumberOfQuest(questionList.length);\r\n    }, [questionList])\r\n\r\n    return (\r\n        <div>\r\n            <Container className=\"p-4\">\r\n                <h1 className=\"text-center\">Tạo Quiz</h1>\r\n\r\n                <Row>\r\n                    <Col md={8} sm={12} className=\"offset-md-2 offset-sm-0\">\r\n                        <Form>\r\n                            <Form.Group className=\"mb-2\" controlId=\"formBasicEmail\">\r\n                                <Form.Label>Tiêu đề</Form.Label>\r\n                                <Form.Control type=\"text\" required validate=\"Quiz name is not valid!\"/>\r\n                            </Form.Group>\r\n                            <fieldset>\r\n                                <Form.Group as={Row} className=\"mb-2\">\r\n                                <Form.Label as=\"legend\" column sm={12}>\r\n                                    Chế độ:\r\n                                </Form.Label>\r\n                                <Col sm={12}>\r\n                                    <Form.Check\r\n                                        type=\"radio\"\r\n                                        label=\"Công khai\"\r\n                                        name=\"quiz-mode\"\r\n                                        checked={quizMode === 0}\r\n                                        onChange={() => onQuizModeChange(0)}\r\n                                    />\r\n                                     <Form.Check\r\n                                        type=\"radio\"\r\n                                        label=\"Riêng tư\"\r\n                                        name=\"quiz-mode\"\r\n                                        checked={quizMode === 1}\r\n                                        onChange={() => onQuizModeChange(1)}\r\n                                    />\r\n                                </Col>\r\n                                </Form.Group>\r\n                            </fieldset>\r\n                            <Form.Group className=\"mb-2\" controlId=\"formBasicEmail\">\r\n                                <Form.Label>Mật khẩu</Form.Label>\r\n                                <Form.Control \r\n                                    type=\"text\"\r\n                                    validate=\"Quiz password is not valid!\" \r\n                                    minLength={6} maxLength={10}\r\n                                    disabled = {quizMode === 0 && \"disabled\"}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-2\" controlId=\"formBasicEmail\">\r\n                                <Form.Check \r\n                                    label=\"Thời gian (phút)\" \r\n                                    onChange = {() => setUseQuizTime(!useQuizTime)} \r\n                                />\r\n                                <Form.Text muted>\r\n                                    Lựa chọn và nhập thời gian làm bài cho toàn bộ quiz hoặc không lựa chọn và đặt thời gian riêng lẻ cho từng câu hỏi.\r\n                                </Form.Text>\r\n                                <Form.Control \r\n                                    type=\"number\"\r\n                                    min = {1}\r\n                                    validate=\"Quiz password is not valid!\" \r\n                                    disabled = {!useQuizTime && \"disabled\"}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Form.Check \r\n                                    label=\"Giữ thứ tự câu hỏi\" \r\n                                />\r\n                                <Form.Text muted>\r\n                                    Nếu không chọn, câu hỏi sẽ được sắp xếp ngẫu nhiên.\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Button variant=\"warning\" type=\"submit\" className=\"btn-3\">\r\n                                Xác nhận thông tin Quiz\r\n                            </Button>\r\n                        </Form>\r\n                        {submittedQuizDetails && (<Row className=\"mt-2\">\r\n                            <h3 className=\"text-center\">Câu hỏi</h3>\r\n                            <Button variant=\"info\" className=\"btn-block\" onClick={() => setAddQuestionModalShow(true)}>\r\n                                <Add fontSize=\"small\" style={{ color: \"white\"}}></Add>\r\n                            </Button>\r\n                            <p className=\"mt-2\" >Số lượng câu hỏi: {numberOfQuest}</p>\r\n                            {\r\n                                questionList.map((quest, index) => {\r\n                                    return ( \r\n                                        <div className=\"mt-2 mb-2 questionBox\" key={quest[\"question\"]}>\r\n                                            <p className=\"quest-title\"><b>Câu {index + 1}: </b>{quest[\"question\"]}</p>\r\n                                            {quest[\"image\"] !== \"\" &&\r\n                                                <img className=\"question-image\" alt=\"\" src={quest[\"image\"]}></img>\r\n                                            }\r\n                                            <div className=\"quest-content\">\r\n                                                {quest[\"questionType\"] === 1 && (\r\n                                                    <p>Đáp án: {quest[\"keys\"][0]}</p>\r\n                                                )}\r\n                                                {quest[\"questionType\"] === 0 && (\r\n                                                    quest[\"keys\"].map((key, index) => {\r\n                                                        return (\r\n                                                        <p className={quest[\"keyCorrects\"][index]? \"correct-key\" : \"incorrect-key\"}>\r\n                                                            Phương án {index + 1}: {key}\r\n                                                        </p>)\r\n                                                    })\r\n                                                )}\r\n                                                {quest[\"explain\"] !== \"\" && (\r\n                                                    <p>Giải thích: {quest[\"explain\"]}</p>\r\n                                                )}\r\n                                            </div>\r\n                                        </div>\r\n                                     )\r\n                                })\r\n                            }\r\n                        </Row>)}\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n\r\n            <QuestionAddModal\r\n                show={addQuestionModalShow}\r\n                onHide={() => setAddQuestionModalShow(false)}\r\n                numberOfQuest={numberOfQuest}\r\n                onAddQuestionSubmit={onAddQuestionSubmit}\r\n                useQuizTime={useQuizTime}\r\n            >\r\n\r\n            </QuestionAddModal>\r\n\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}