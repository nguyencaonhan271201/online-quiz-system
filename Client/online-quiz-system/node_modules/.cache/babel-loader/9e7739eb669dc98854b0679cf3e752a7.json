{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding\\\\Quiz Generator Project\\\\Client\\\\online-quiz-system\\\\src\\\\pages\\\\quiz-main\\\\QuizMain.jsx\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect, useContext } from 'react';\nimport \"./quizmain.css\";\nimport axios from \"axios\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction QuizMain() {\n  _s();\n\n  let {\n    id\n  } = useParams();\n  const {\n    user\n  } = useContext(AuthContext);\n  const [questions, setQuestions] = useState([]);\n  const [quizInfo, setQuizInfo] = useState([]);\n\n  const shuffleArray = array => {\n    for (var i = array.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      var temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n\n    return array;\n  };\n\n  const getQuestions = async () => {};\n\n  const getQuizInfo = async () => {\n    let quizInfo = await axios.get(`/quiz/info/${id}`);\n    quizInfo = JSON.parse(quizInfo.request.response);\n    setQuizInfo(quizInfo);\n    let listOfQuestions = await axios.get(`/quiz/join/${id}`);\n    listOfQuestions = JSON.parse(listOfQuestions.request.response);\n    console.log(quizInfo[0]);\n\n    if (quizInfo[0][\"raw_order\"] == 0) {\n      listOfQuestions = shuffleArray(listOfQuestions);\n    }\n\n    setQuestions(listOfQuestions);\n  };\n\n  useEffect(() => {\n    if (quizInfo.length == 0) {\n      getQuizInfo();\n      getQuestions();\n    }\n  }, []);\n  useEffect(() => {\n    console.log(questions);\n    console.log(quizInfo);\n  }, [questions, quizInfo]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: questions.length == 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading Questions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 40\n    }, this) || questions.map(question => {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Questions Loaded Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false);\n}\n\n_s(QuizMain, \"nSSMVLiHCYQTrRLVhG9YXK0cFhk=\", false, function () {\n  return [useParams];\n});\n\n_c = QuizMain;\nexport default QuizMain;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuizMain\");","map":{"version":3,"sources":["D:/Coding/Quiz Generator Project/Client/online-quiz-system/src/pages/quiz-main/QuizMain.jsx"],"names":["React","useState","useEffect","useContext","axios","AuthContext","useParams","QuizMain","id","user","questions","setQuestions","quizInfo","setQuizInfo","shuffleArray","array","i","length","j","Math","floor","random","temp","getQuestions","getQuizInfo","get","JSON","parse","request","response","listOfQuestions","console","log","map","question"],"mappings":"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","sourcesContent":["import {React, useState, useEffect, useContext} from 'react'\r\nimport \"./quizmain.css\";\r\nimport axios from \"axios\";\r\nimport {AuthContext} from \"../../context/AuthContext\";\r\nimport {\r\n    useParams\r\n} from \"react-router-dom\";\r\n\r\nfunction QuizMain() {\r\n    let {id} = useParams();\r\n    const {user} = useContext(AuthContext);\r\n    const [questions, setQuestions] = useState([]);\r\n    const [quizInfo, setQuizInfo] = useState([]);\r\n\r\n    const shuffleArray = (array) => {\r\n        for (var i = array.length - 1; i > 0; i--) {\r\n            var j = Math.floor(Math.random() * (i + 1));\r\n            var temp = array[i];\r\n            array[i] = array[j];\r\n            array[j] = temp;\r\n        }\r\n        return array\r\n    }\r\n\r\n    const getQuestions = async() => {\r\n        \r\n    }\r\n\r\n    const getQuizInfo = async() => {\r\n        let quizInfo = await axios.get(`/quiz/info/${id}`);\r\n        quizInfo = JSON.parse(quizInfo.request.response);\r\n        setQuizInfo(quizInfo);\r\n\r\n        let listOfQuestions = await axios.get(`/quiz/join/${id}`);\r\n        listOfQuestions = JSON.parse(listOfQuestions.request.response);\r\n        console.log(quizInfo[0]);\r\n        if (quizInfo[0][\"raw_order\"] == 0) {\r\n            listOfQuestions = shuffleArray(listOfQuestions);\r\n        }\r\n        \r\n        setQuestions(listOfQuestions);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (quizInfo.length == 0) {\r\n            getQuizInfo();\r\n            getQuestions();\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        console.log(questions);\r\n        console.log(quizInfo);\r\n    }, [questions, quizInfo])\r\n\r\n    return (\r\n        <>\r\n            {questions.length == 0 && (<p>Loading Questions</p>)\r\n            || questions.map(question => {\r\n                return (\r\n                    <p>Questions Loaded Completed</p>\r\n                )\r\n            })}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default QuizMain\r\n"]},"metadata":{},"sourceType":"module"}