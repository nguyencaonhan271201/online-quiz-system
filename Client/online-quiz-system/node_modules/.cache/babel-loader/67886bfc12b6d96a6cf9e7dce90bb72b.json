{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding\\\\Quiz Generator Project\\\\Client\\\\online-quiz-system\\\\src\\\\components\\\\question-add-modal\\\\QuestionAddModal.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./question-add-modal.css\";\nimport { React, useState, useEffect } from 'react';\nimport { Form, Button, Modal, Row, Col } from \"react-bootstrap\";\nimport storage from './../../firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction QuestionAddModal(props) {\n  _s();\n\n  const [question, setQuestion] = useState(\"\");\n  const [questionType, setQuestionType] = useState(0);\n  const [numberOfChoices, setNumberOfChoices] = useState(0);\n  const [numberOfChoicesError, setNumberOfChoicesError] = useState(\"\");\n  const [keys, setKeys] = useState([]);\n  const [keyCorrects, setKeyCorrects] = useState([]);\n  const [explain, setExplain] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [file, setFile] = useState(null);\n\n  const handleQuestionTypeChange = type => {\n    setQuestionType(type);\n\n    if (type == 1) {\n      setNumberOfChoices(1);\n      setNumberOfChoicesError(\"\");\n      setKeyCorrects([true]);\n      setKeys([\"\"]);\n    } else {\n      setNumberOfChoices(0);\n      setKeyCorrects([]);\n      setKeys([]);\n    }\n  };\n\n  const handleChoicesCountChange = count => {\n    if (count < 2 || count > 5) {\n      setNumberOfChoicesError(\"Số lượng phương án phải từ 2 đến 5.\");\n    } else {\n      setNumberOfChoices(count);\n      setNumberOfChoicesError(\"\");\n      let tmpKeysArr = [];\n      let tmpKeysCorrectArr = [];\n\n      for (let i = 0; i < count; i++) {\n        tmpKeysArr.push(\"\");\n        tmpKeysCorrectArr.push(false);\n      }\n\n      setKeyCorrects(tmpKeysCorrectArr);\n      setKeys(tmpKeysArr);\n    }\n  };\n\n  const handleCorrectKeyChange = index => {\n    let getKeyCorrectArr = [];\n\n    for (let i = 0; i < keyCorrects.length; i++) {\n      getKeyCorrectArr.push(false);\n    }\n\n    let item = getKeyCorrectArr[index];\n    getKeyCorrectArr[index] = !item;\n    setKeyCorrects(getKeyCorrectArr);\n  };\n\n  const handleKeyChange = (index, value) => {\n    let emptyArr = [];\n\n    for (let i = 0; i < keys.length; i++) {\n      if (i === index) {\n        emptyArr.push(value);\n      } else {\n        emptyArr.push(keys[i]);\n      }\n    }\n\n    setKeys(emptyArr);\n  };\n\n  const prepareFormSubmit = async () => {\n    //Validate info\n    //Upload to firebase and retrieve URL \n    if (file) {\n      let fileName = file.name + \"-\" + Date.now(); //questions_images\n\n      storage.ref(`questions_images/${fileName}`).put(file).on(\"state_changed\", snapshot => {}, error => {\n        console.log(error);\n      }, () => {\n        storage.ref(`questions_images/`).child(`${fileName}`).getDownloadURL().then(url => {\n          //setImage(url);\n          callParentSubmit(url);\n        }, error => {\n          console.log(error);\n        });\n      });\n    } else {\n      callParentSubmit(\"\");\n    }\n  };\n\n  const callParentSubmit = image => {\n    let output = {};\n    output[\"question\"] = question;\n    output[\"questionType\"] = questionType;\n    output[\"numberOfChoices\"] = numberOfChoices;\n    output[\"keys\"] = keys;\n    output[\"keyCorrects\"] = keyCorrects;\n    output[\"explain\"] = explain;\n    output[\"image\"] = image;\n    props.onAddQuestionSubmit(output);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    size: \"lg\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    ...props,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        id: \"contained-modal-title-vcenter\",\n        children: [\"Th\\xEAm c\\xE2u h\\u1ECFi (c\\xE2u \", props.numberOfQuest + 1, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: 10,\n          sm: 12,\n          className: \"offset-md-1 offset-sm-0\",\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: prepareFormSubmit,\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"\",\n              controlId: \"formBasicEmail\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"C\\xE2u h\\u1ECFi\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"textarea\",\n                required: true,\n                validate: \"Quiz name is not valid!\",\n                onChange: e => setQuestion(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"\",\n              children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n                children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Row,\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    as: \"legend\",\n                    column: true,\n                    sm: 2,\n                    children: \"Lo\\u1EA1i:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 135,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    sm: 12,\n                    children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n                      type: \"radio\",\n                      label: \"Tr\\u1EAFc nghi\\u1EC7m\",\n                      name: \"question-type\",\n                      checked: questionType == 0,\n                      onChange: () => handleQuestionTypeChange(0)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 139,\n                      columnNumber: 37\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n                      type: \"radio\",\n                      label: \"Tr\\u1EA3 l\\u1EDDi ng\\u1EAFn\",\n                      name: \"question-type\",\n                      checked: questionType == 1,\n                      onChange: () => handleQuestionTypeChange(1)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 146,\n                      columnNumber: 38\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 138,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 29\n            }, this), questionType == 0 && /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"\",\n              controlId: \"formBasicEmail\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"S\\u1ED1 ph\\u01B0\\u01A1ng \\xE1n\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"number\",\n                validate: \"Ph\\u1EA3i l\\xE0 gi\\xE1 tr\\u1ECB t\\u1EEB 2 \\u0111\\u1EBFn 5\",\n                min: 2,\n                max: 5,\n                onChange: e => handleChoicesCountChange(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"error\",\n                children: numberOfChoicesError\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 34\n            }, this), numberOfChoicesError == \"\" && questionType == 0 && [...Array(parseInt(numberOfChoices))].map((x, i) => {\n              let getClassName = `question-${numberOfChoices}-answer`;\n              return /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mt-2\",\n                controlId: \"formBasicEmail\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: [\"Ph\\u01B0\\u01A1ng \\xE1n \", i + 1, /*#__PURE__*/_jsxDEV(Form.Check, {\n                    type: \"radio\",\n                    label: \"\\u0110\\xFAng\",\n                    name: getClassName,\n                    onChange: () => handleCorrectKeyChange(i)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 175,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  required: true,\n                  validate: \"Kh\\xF4ng h\\u1EE3p l\\u1EC7!\",\n                  minLength: 1,\n                  onChange: e => handleKeyChange(i, e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 41\n              }, this);\n            }) || questionType == 1 && /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"\",\n              controlId: \"formBasicEmail\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"\\u0110\\xE1p \\xE1n\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                required: true,\n                validate: \"\\u0110\\xE1p \\xE1n kh\\xF4ng h\\u1EE3p l\\u1EC7!\",\n                minLength: 1,\n                onChange: e => handleKeyChange(0, e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mt-2\",\n              controlId: \"formBasicEmail\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Gi\\u1EA3i th\\xEDch (n\\u1EBFu c\\xF3)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"textarea\",\n                validate: \"Kh\\xF4ng h\\u1EE3p l\\u1EC7!\",\n                onChange: e => setExplain(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formFileSm\",\n              className: \"mb-3 mt-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"\\u1EA2nh (n\\u1EBFu c\\xF3)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 70\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"file\",\n                id: \"file\",\n                accept: \".png, .jpeg, .jpg\",\n                size: \"sm\",\n                onChange: e => setFile(e.target.files[0])\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"success\",\n        type: \"submit\",\n        onClick: () => prepareFormSubmit(),\n        children: \"Th\\xEAm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 9\n  }, this);\n}\n\n_s(QuestionAddModal, \"HX7TR2Y/OkRg/YkGc3UWI7NVNQk=\");\n\n_c = QuestionAddModal;\nexport default QuestionAddModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionAddModal\");","map":{"version":3,"sources":["D:/Coding/Quiz Generator Project/Client/online-quiz-system/src/components/question-add-modal/QuestionAddModal.jsx"],"names":["React","useState","useEffect","Form","Button","Modal","Row","Col","storage","QuestionAddModal","props","question","setQuestion","questionType","setQuestionType","numberOfChoices","setNumberOfChoices","numberOfChoicesError","setNumberOfChoicesError","keys","setKeys","keyCorrects","setKeyCorrects","explain","setExplain","image","setImage","file","setFile","handleQuestionTypeChange","type","handleChoicesCountChange","count","tmpKeysArr","tmpKeysCorrectArr","i","push","handleCorrectKeyChange","index","getKeyCorrectArr","length","item","handleKeyChange","value","emptyArr","prepareFormSubmit","fileName","name","Date","now","ref","put","on","snapshot","error","console","log","child","getDownloadURL","then","url","callParentSubmit","output","onAddQuestionSubmit","numberOfQuest","e","target","Array","parseInt","map","x","getClassName","files"],"mappings":";;;AAAA,OAAO,0BAAP;AACA,SAAQA,KAAR,EAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,IAAR,EAAcC,MAAd,EAAsBC,KAAtB,EAA6BC,GAA7B,EAAkCC,GAAlC,QAA4C,iBAA5C;AACA,OAAOC,OAAP,MAAoB,kBAApB;;;AAEA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAAA;;AAC7B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACY,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAAC,CAAD,CAAhD;AACA,QAAM,CAACc,eAAD,EAAkBC,kBAAlB,IAAwCf,QAAQ,CAAC,CAAD,CAAtD;AACA,QAAM,CAACgB,oBAAD,EAAuBC,uBAAvB,IAAkDjB,QAAQ,CAAC,EAAD,CAAhE;AACA,QAAM,CAACkB,IAAD,EAAOC,OAAP,IAAkBnB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACoB,WAAD,EAAcC,cAAd,IAAgCrB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACsB,OAAD,EAAUC,UAAV,IAAwBvB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACwB,KAAD,EAAQC,QAAR,IAAoBzB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAC0B,IAAD,EAAOC,OAAP,IAAkB3B,QAAQ,CAAC,IAAD,CAAhC;;AAEA,QAAM4B,wBAAwB,GAAIC,IAAD,IAAU;AACvChB,IAAAA,eAAe,CAACgB,IAAD,CAAf;;AACA,QAAIA,IAAI,IAAI,CAAZ,EACA;AACId,MAAAA,kBAAkB,CAAC,CAAD,CAAlB;AACAE,MAAAA,uBAAuB,CAAC,EAAD,CAAvB;AACAI,MAAAA,cAAc,CAAC,CAAC,IAAD,CAAD,CAAd;AACAF,MAAAA,OAAO,CAAC,CAAC,EAAD,CAAD,CAAP;AACH,KAND,MAMO;AACHJ,MAAAA,kBAAkB,CAAC,CAAD,CAAlB;AACAM,MAAAA,cAAc,CAAC,EAAD,CAAd;AACAF,MAAAA,OAAO,CAAC,EAAD,CAAP;AACH;AACJ,GAbD;;AAeA,QAAMW,wBAAwB,GAAIC,KAAD,IAAW;AACxC,QAAIA,KAAK,GAAG,CAAR,IAAaA,KAAK,GAAG,CAAzB,EAA4B;AACxBd,MAAAA,uBAAuB,CAAC,qCAAD,CAAvB;AACH,KAFD,MAEO;AACHF,MAAAA,kBAAkB,CAACgB,KAAD,CAAlB;AACAd,MAAAA,uBAAuB,CAAC,EAAD,CAAvB;AACA,UAAIe,UAAU,GAAG,EAAjB;AACA,UAAIC,iBAAiB,GAAG,EAAxB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,KAApB,EAA2BG,CAAC,EAA5B,EAAgC;AAC5BF,QAAAA,UAAU,CAACG,IAAX,CAAgB,EAAhB;AACAF,QAAAA,iBAAiB,CAACE,IAAlB,CAAuB,KAAvB;AACH;;AACDd,MAAAA,cAAc,CAACY,iBAAD,CAAd;AACAd,MAAAA,OAAO,CAACa,UAAD,CAAP;AACH;AACJ,GAfD;;AAiBA,QAAMI,sBAAsB,GAAIC,KAAD,IAAW;AACtC,QAAIC,gBAAgB,GAAG,EAAvB;;AACA,SAAK,IAAIJ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGd,WAAW,CAACmB,MAAhC,EAAwCL,CAAC,EAAzC,EAA6C;AACzCI,MAAAA,gBAAgB,CAACH,IAAjB,CAAsB,KAAtB;AACH;;AACD,QAAIK,IAAI,GAAGF,gBAAgB,CAACD,KAAD,CAA3B;AACAC,IAAAA,gBAAgB,CAACD,KAAD,CAAhB,GAA0B,CAACG,IAA3B;AACAnB,IAAAA,cAAc,CAACiB,gBAAD,CAAd;AACH,GARD;;AAUA,QAAMG,eAAe,GAAG,CAACJ,KAAD,EAAQK,KAAR,KAAkB;AACtC,QAAIC,QAAQ,GAAG,EAAf;;AACA,SAAK,IAAIT,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGhB,IAAI,CAACqB,MAAzB,EAAiCL,CAAC,EAAlC,EAAsC;AAClC,UAAIA,CAAC,KAAKG,KAAV,EAAiB;AACbM,QAAAA,QAAQ,CAACR,IAAT,CAAcO,KAAd;AACH,OAFD,MAEO;AACHC,QAAAA,QAAQ,CAACR,IAAT,CAAcjB,IAAI,CAACgB,CAAD,CAAlB;AACH;AACJ;;AACDf,IAAAA,OAAO,CAACwB,QAAD,CAAP;AACH,GAVD;;AAYA,QAAMC,iBAAiB,GAAG,YAAW;AACjC;AAGA;AACA,QAAIlB,IAAJ,EAAU;AACN,UAAImB,QAAQ,GAAGnB,IAAI,CAACoB,IAAL,GAAY,GAAZ,GAAkBC,IAAI,CAACC,GAAL,EAAjC,CADM,CAEN;;AACAzC,MAAAA,OAAO,CAAC0C,GAAR,CAAa,oBAAmBJ,QAAS,EAAzC,EAA4CK,GAA5C,CAAgDxB,IAAhD,EACCyB,EADD,CACI,eADJ,EACsBC,QAAD,IAAc,CAAE,CADrC,EAECC,KAAD,IAAW;AAACC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAAmB,OAF/B,EAGA,MAAM;AACF9C,QAAAA,OAAO,CAAC0C,GAAR,CAAa,mBAAb,EAAiCO,KAAjC,CAAwC,GAAEX,QAAS,EAAnD,EAAsDY,cAAtD,GACCC,IADD,CAEKC,GAAD,IAAS;AACL;AACAC,UAAAA,gBAAgB,CAACD,GAAD,CAAhB;AACH,SALL,EAMKN,KAAD,IAAW;AACPC,UAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,SARL;AAUH,OAdD;AAeH,KAlBD,MAkBO;AACHO,MAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACH;AACJ,GA1BD;;AA4BA,QAAMA,gBAAgB,GAAIpC,KAAD,IAAW;AAChC,QAAIqC,MAAM,GAAG,EAAb;AACAA,IAAAA,MAAM,CAAC,UAAD,CAAN,GAAqBnD,QAArB;AACAmD,IAAAA,MAAM,CAAC,cAAD,CAAN,GAAyBjD,YAAzB;AACAiD,IAAAA,MAAM,CAAC,iBAAD,CAAN,GAA4B/C,eAA5B;AACA+C,IAAAA,MAAM,CAAC,MAAD,CAAN,GAAiB3C,IAAjB;AACA2C,IAAAA,MAAM,CAAC,aAAD,CAAN,GAAwBzC,WAAxB;AACAyC,IAAAA,MAAM,CAAC,SAAD,CAAN,GAAoBvC,OAApB;AACAuC,IAAAA,MAAM,CAAC,OAAD,CAAN,GAAkBrC,KAAlB;AACAf,IAAAA,KAAK,CAACqD,mBAAN,CAA0BD,MAA1B;AACH,GAVD;;AAYA,sBACI,QAAC,KAAD;AACI,IAAA,IAAI,EAAC,IADT;AAEI,uBAAgB,+BAFpB;AAGI,IAAA,QAAQ,MAHZ;AAAA,OAIQpD,KAJR;AAAA,4BAMI,QAAC,KAAD,CAAO,MAAP;AAAA,6BACI,QAAC,KAAD,CAAO,KAAP;AAAa,QAAA,EAAE,EAAC,+BAAhB;AAAA,uDACuBA,KAAK,CAACsD,aAAN,GAAsB,CAD7C;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YANJ,eAWI,QAAC,KAAD,CAAO,IAAP;AAAA,6BACA,QAAC,GAAD;AAAA,+BACQ,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,EAAT;AAAa,UAAA,EAAE,EAAE,EAAjB;AAAqB,UAAA,SAAS,EAAC,yBAA/B;AAAA,iCACI,QAAC,IAAD;AAAM,YAAA,QAAQ,EAAEnB,iBAAhB;AAAA,oCACI,QAAC,IAAD,CAAM,KAAN;AAAY,cAAA,SAAS,EAAC,EAAtB;AAAyB,cAAA,SAAS,EAAC,gBAAnC;AAAA,sCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,gBAAA,EAAE,EAAC,UAAjB;AAA4B,gBAAA,QAAQ,MAApC;AAAqC,gBAAA,QAAQ,EAAC,yBAA9C;AACA,gBAAA,QAAQ,EAAGoB,CAAD,IAAOrD,WAAW,CAACqD,CAAC,CAACC,MAAF,CAASvB,KAAV;AAD5B;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAMI,QAAC,IAAD,CAAM,KAAN;AAAY,cAAA,SAAS,EAAC,EAAtB;AAAA,qCACA;AAAA,uCACI,QAAC,IAAD,CAAM,KAAN;AAAY,kBAAA,EAAE,EAAErC,GAAhB;AAAqB,kBAAA,SAAS,EAAC,MAA/B;AAAA,0CACA,QAAC,IAAD,CAAM,KAAN;AAAY,oBAAA,EAAE,EAAC,QAAf;AAAwB,oBAAA,MAAM,MAA9B;AAA+B,oBAAA,EAAE,EAAE,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADA,eAIA,QAAC,GAAD;AAAK,oBAAA,EAAE,EAAE,EAAT;AAAA,4CACI,QAAC,IAAD,CAAM,KAAN;AACI,sBAAA,IAAI,EAAC,OADT;AAEI,sBAAA,KAAK,EAAC,uBAFV;AAGI,sBAAA,IAAI,EAAC,eAHT;AAII,sBAAA,OAAO,EAAEO,YAAY,IAAI,CAJ7B;AAKI,sBAAA,QAAQ,EAAE,MAAMgB,wBAAwB,CAAC,CAAD;AAL5C;AAAA;AAAA;AAAA;AAAA,4BADJ,eAQK,QAAC,IAAD,CAAM,KAAN;AACG,sBAAA,IAAI,EAAC,OADR;AAEG,sBAAA,KAAK,EAAC,6BAFT;AAGG,sBAAA,IAAI,EAAC,eAHR;AAIG,sBAAA,OAAO,EAAEhB,YAAY,IAAI,CAJ5B;AAKG,sBAAA,QAAQ,EAAE,MAAMgB,wBAAwB,CAAC,CAAD;AAL3C;AAAA;AAAA;AAAA;AAAA,4BARL;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,oBANJ,EA+BKhB,YAAY,IAAI,CAAhB,iBACI,QAAC,IAAD,CAAM,KAAN;AAAY,cAAA,SAAS,EAAC,EAAtB;AAAyB,cAAA,SAAS,EAAC,gBAAnC;AAAA,sCACD,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADC,eAED,QAAC,IAAD,CAAM,OAAN;AACI,gBAAA,IAAI,EAAC,QADT;AAEI,gBAAA,QAAQ,EAAC,2DAFb;AAGI,gBAAA,GAAG,EAAE,CAHT;AAGY,gBAAA,GAAG,EAAE,CAHjB;AAII,gBAAA,QAAQ,EAAGoD,CAAD,IAAOlC,wBAAwB,CAACkC,CAAC,CAACC,MAAF,CAASvB,KAAV;AAJ7C;AAAA;AAAA;AAAA;AAAA,sBAFC,eAQD;AAAG,gBAAA,SAAS,EAAC,OAAb;AAAA,0BAAsB1B;AAAtB;AAAA;AAAA;AAAA;AAAA,sBARC;AAAA;AAAA;AAAA;AAAA;AAAA,oBAhCT,EA4CQA,oBAAoB,IAAI,EAAxB,IAA+BJ,YAAY,IAAI,CAAhB,IAAqB,CAAC,GAAGsD,KAAK,CAACC,QAAQ,CAACrD,eAAD,CAAT,CAAT,EAAsCsD,GAAtC,CAA0C,CAACC,CAAD,EAAInC,CAAJ,KAAU;AACpG,kBAAIoC,YAAY,GAAI,YAAWxD,eAAgB,SAA/C;AACA,kCACI,QAAC,IAAD,CAAM,KAAN;AAAY,gBAAA,SAAS,EAAC,MAAtB;AAA6B,gBAAA,SAAS,EAAC,gBAAvC;AAAA,wCACI,QAAC,IAAD,CAAM,KAAN;AAAA,wDAAuBoB,CAAC,GAAG,CAA3B,eACA,QAAC,IAAD,CAAM,KAAN;AACI,oBAAA,IAAI,EAAC,OADT;AAEI,oBAAA,KAAK,EAAC,cAFV;AAGI,oBAAA,IAAI,EAAEoC,YAHV;AAII,oBAAA,QAAQ,EAAE,MAAMlC,sBAAsB,CAACF,CAAD;AAJ1C;AAAA;AAAA;AAAA;AAAA,0BADA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eASI,QAAC,IAAD,CAAM,OAAN;AAAc,kBAAA,IAAI,EAAC,MAAnB;AAA0B,kBAAA,QAAQ,MAAlC;AAAmC,kBAAA,QAAQ,EAAC,4BAA5C;AAA4D,kBAAA,SAAS,EAAE,CAAvE;AACA,kBAAA,QAAQ,EAAG8B,CAAD,IAAOvB,eAAe,CAACP,CAAD,EAAI8B,CAAC,CAACC,MAAF,CAASvB,KAAb;AADhC;AAAA;AAAA;AAAA;AAAA,wBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ;AAcH,aAhBmD,CAApD,IAiBC9B,YAAY,IAAI,CAAhB,iBACG,QAAC,IAAD,CAAM,KAAN;AAAY,cAAA,SAAS,EAAC,EAAtB;AAAyB,cAAA,SAAS,EAAC,gBAAnC;AAAA,sCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,gBAAA,IAAI,EAAC,MAAnB;AAA0B,gBAAA,QAAQ,MAAlC;AAAmC,gBAAA,QAAQ,EAAC,8CAA5C;AAAmE,gBAAA,SAAS,EAAE,CAA9E;AACA,gBAAA,QAAQ,EAAGoD,CAAD,IAAOvB,eAAe,CAAC,CAAD,EAAIuB,CAAC,CAACC,MAAF,CAASvB,KAAb;AADhC;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBA9DZ,eAqEI,QAAC,IAAD,CAAM,KAAN;AAAY,cAAA,SAAS,EAAC,MAAtB;AAA6B,cAAA,SAAS,EAAC,gBAAvC;AAAA,sCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,gBAAA,EAAE,EAAC,UAAjB;AAA4B,gBAAA,QAAQ,EAAC,4BAArC;AACA,gBAAA,QAAQ,EAAGsB,CAAD,IAAOzC,UAAU,CAACyC,CAAC,CAACC,MAAF,CAASvB,KAAV;AAD3B;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBArEJ,eA0EI,QAAC,IAAD,CAAM,KAAN;AAAY,cAAA,SAAS,EAAC,YAAtB;AAAmC,cAAA,SAAS,EAAC,WAA7C;AAAA,sCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eACyC;AAAA;AAAA;AAAA;AAAA,sBADzC,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,gBAAA,IAAI,EAAC,MAAnB;AAA0B,gBAAA,EAAE,EAAC,MAA7B;AAAoC,gBAAA,MAAM,EAAC,mBAA3C;AAA+D,gBAAA,IAAI,EAAC,IAApE;AAAyE,gBAAA,QAAQ,EAAGsB,CAAD,IAAOrC,OAAO,CAACqC,CAAC,CAACC,MAAF,CAASM,KAAT,CAAe,CAAf,CAAD;AAAjG;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBA1EJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAXJ,eAiGI,QAAC,KAAD,CAAO,MAAP;AAAA,6BACA,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,SAAhB;AAA0B,QAAA,IAAI,EAAC,QAA/B;AAAwC,QAAA,OAAO,EAAE,MAAM3B,iBAAiB,EAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAjGJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuGH;;GAhNQpC,gB;;KAAAA,gB;AAkNT,eAAeA,gBAAf","sourcesContent":["import \"./question-add-modal.css\";\r\nimport {React, useState, useEffect} from 'react'\r\nimport {Form, Button, Modal, Row, Col} from \"react-bootstrap\";\r\nimport storage from './../../firebase';\r\n\r\nfunction QuestionAddModal(props) {\r\n    const [question, setQuestion] = useState(\"\");\r\n    const [questionType, setQuestionType] = useState(0);\r\n    const [numberOfChoices, setNumberOfChoices] = useState(0);\r\n    const [numberOfChoicesError, setNumberOfChoicesError] = useState(\"\");\r\n    const [keys, setKeys] = useState([]);\r\n    const [keyCorrects, setKeyCorrects] = useState([]);\r\n    const [explain, setExplain] = useState(\"\");\r\n    const [image, setImage] = useState(\"\");\r\n    const [file, setFile] = useState(null);\r\n\r\n    const handleQuestionTypeChange = (type) => {\r\n        setQuestionType(type);\r\n        if (type == 1) \r\n        {\r\n            setNumberOfChoices(1);\r\n            setNumberOfChoicesError(\"\");\r\n            setKeyCorrects([true]);\r\n            setKeys([\"\"]);\r\n        } else {\r\n            setNumberOfChoices(0);\r\n            setKeyCorrects([]);\r\n            setKeys([]);\r\n        }\r\n    }\r\n\r\n    const handleChoicesCountChange = (count) => {\r\n        if (count < 2 || count > 5) {\r\n            setNumberOfChoicesError(\"Số lượng phương án phải từ 2 đến 5.\");\r\n        } else {\r\n            setNumberOfChoices(count);\r\n            setNumberOfChoicesError(\"\");\r\n            let tmpKeysArr = []\r\n            let tmpKeysCorrectArr = []\r\n            for (let i = 0; i < count; i++) {\r\n                tmpKeysArr.push(\"\");\r\n                tmpKeysCorrectArr.push(false);\r\n            }\r\n            setKeyCorrects(tmpKeysCorrectArr);\r\n            setKeys(tmpKeysArr);\r\n        }\r\n    }\r\n\r\n    const handleCorrectKeyChange = (index) => {\r\n        let getKeyCorrectArr = [];\r\n        for (let i = 0; i < keyCorrects.length; i++) {\r\n            getKeyCorrectArr.push(false);\r\n        }\r\n        let item = getKeyCorrectArr[index];\r\n        getKeyCorrectArr[index] = !item;\r\n        setKeyCorrects(getKeyCorrectArr);\r\n    }\r\n\r\n    const handleKeyChange = (index, value) => {\r\n        let emptyArr = [];\r\n        for (let i = 0; i < keys.length; i++) {\r\n            if (i === index) {\r\n                emptyArr.push(value);\r\n            } else {\r\n                emptyArr.push(keys[i]);\r\n            }\r\n        }\r\n        setKeys(emptyArr);\r\n    }\r\n\r\n    const prepareFormSubmit = async() => {\r\n        //Validate info\r\n        \r\n\r\n        //Upload to firebase and retrieve URL \r\n        if (file) {\r\n            let fileName = file.name + \"-\" + Date.now();\r\n            //questions_images\r\n            storage.ref(`questions_images/${fileName}`).put(file)\r\n            .on(\"state_changed\", (snapshot) => {}, \r\n            (error) => {console.log(error)}, \r\n            () => {\r\n                storage.ref(`questions_images/`).child(`${fileName}`).getDownloadURL()\r\n                .then(\r\n                    (url) => {\r\n                        //setImage(url);\r\n                        callParentSubmit(url);\r\n                    },\r\n                    (error) => {\r\n                        console.log(error);\r\n                    }\r\n                );\r\n            });\r\n        } else {\r\n            callParentSubmit(\"\");\r\n        }\r\n    }\r\n\r\n    const callParentSubmit = (image) => {\r\n        let output = {};\r\n        output[\"question\"] = question;\r\n        output[\"questionType\"] = questionType;\r\n        output[\"numberOfChoices\"] = numberOfChoices;\r\n        output[\"keys\"] = keys;\r\n        output[\"keyCorrects\"] = keyCorrects;\r\n        output[\"explain\"] = explain;\r\n        output[\"image\"] = image;\r\n        props.onAddQuestionSubmit(output);\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            {...props}\r\n        >\r\n            <Modal.Header>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Thêm câu hỏi (câu {props.numberOfQuest + 1})\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n            <Row>\r\n                    <Col md={10} sm={12} className=\"offset-md-1 offset-sm-0\">\r\n                        <Form onSubmit={prepareFormSubmit}>\r\n                            <Form.Group className=\"\" controlId=\"formBasicEmail\">\r\n                                <Form.Label>Câu hỏi</Form.Label>\r\n                                <Form.Control as=\"textarea\" required validate=\"Quiz name is not valid!\"\r\n                                onChange={(e) => setQuestion(e.target.value)}/>\r\n                            </Form.Group>\r\n                            <Form.Group className=\"\">\r\n                            <fieldset>\r\n                                <Form.Group as={Row} className=\"mb-3\">\r\n                                <Form.Label as=\"legend\" column sm={2}>\r\n                                    Loại:\r\n                                </Form.Label>\r\n                                <Col sm={12}>\r\n                                    <Form.Check\r\n                                        type=\"radio\"\r\n                                        label=\"Trắc nghiệm\"\r\n                                        name=\"question-type\"\r\n                                        checked={questionType == 0}\r\n                                        onChange={() => handleQuestionTypeChange(0)}\r\n                                    />\r\n                                     <Form.Check\r\n                                        type=\"radio\"\r\n                                        label=\"Trả lời ngắn\"\r\n                                        name=\"question-type\"\r\n                                        checked={questionType == 1}\r\n                                        onChange={() => handleQuestionTypeChange(1)}\r\n                                    />\r\n                                </Col>\r\n                                </Form.Group>\r\n                            </fieldset>\r\n                            </Form.Group>\r\n                            {questionType == 0 && \r\n                                (<Form.Group className=\"\" controlId=\"formBasicEmail\">\r\n                                <Form.Label>Số phương án</Form.Label>\r\n                                <Form.Control \r\n                                    type=\"number\"\r\n                                    validate=\"Phải là giá trị từ 2 đến 5\" \r\n                                    min={2} max={5}\r\n                                    onChange={(e) => handleChoicesCountChange(e.target.value)}\r\n                                />\r\n                                <p className=\"error\">{numberOfChoicesError}</p>\r\n                                </Form.Group>)\r\n                            }\r\n                            {\r\n                                numberOfChoicesError == \"\" && (questionType == 0 && [...Array(parseInt(numberOfChoices))].map((x, i) => {\r\n                                    let getClassName = `question-${numberOfChoices}-answer`;\r\n                                    return (\r\n                                        <Form.Group className=\"mt-2\" controlId=\"formBasicEmail\">\r\n                                            <Form.Label>Phương án {i + 1}\r\n                                            <Form.Check\r\n                                                type=\"radio\"\r\n                                                label=\"Đúng\"\r\n                                                name={getClassName}\r\n                                                onChange={() => handleCorrectKeyChange(i)}\r\n                                            />\r\n                                            </Form.Label>\r\n                                            <Form.Control type=\"text\" required validate=\"Không hợp lệ!\" minLength={1}\r\n                                            onChange={(e) => handleKeyChange(i, e.target.value)}/>\r\n                                        </Form.Group>\r\n                                    )\r\n                                })) || \r\n                                (questionType == 1 && \r\n                                    <Form.Group className=\"\" controlId=\"formBasicEmail\">\r\n                                        <Form.Label>Đáp án</Form.Label>\r\n                                        <Form.Control type=\"text\" required validate=\"Đáp án không hợp lệ!\" minLength={1}\r\n                                        onChange={(e) => handleKeyChange(0, e.target.value)}/>\r\n                                    </Form.Group>\r\n                                )\r\n                            }\r\n                            <Form.Group className=\"mt-2\" controlId=\"formBasicEmail\">\r\n                                <Form.Label>Giải thích (nếu có)</Form.Label>\r\n                                <Form.Control as=\"textarea\" validate=\"Không hợp lệ!\"\r\n                                onChange={(e) => setExplain(e.target.value)}/>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formFileSm\" className=\"mb-3 mt-3\">\r\n                                <Form.Label>Ảnh (nếu có)</Form.Label><br></br>\r\n                                <Form.Control type=\"file\" id=\"file\" accept=\".png, .jpeg, .jpg\" size=\"sm\" onChange={(e) => setFile(e.target.files[0])}/>\r\n                            </Form.Group>\r\n                        </Form>\r\n                        \r\n                    </Col>\r\n                </Row>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n            <Button variant=\"success\" type=\"submit\" onClick={() => prepareFormSubmit()}>Thêm</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default QuestionAddModal\r\n"]},"metadata":{},"sourceType":"module"}