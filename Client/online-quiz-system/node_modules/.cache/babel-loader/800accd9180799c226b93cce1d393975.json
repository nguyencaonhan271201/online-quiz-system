{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding\\\\Quiz Generator Project\\\\Client\\\\online-quiz-system\\\\src\\\\pages\\\\quiz-main\\\\QuizMain.jsx\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect, useContext, useRef, createRef } from 'react';\nimport \"./quizmain.css\";\nimport axios from \"axios\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport { useParams } from \"react-router-dom\";\nimport { Row, Col, Container, ProgressBar, Button } from \"react-bootstrap\";\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction QuizMain() {\n  _s();\n\n  let {\n    id\n  } = useParams();\n  const {\n    user\n  } = useContext(AuthContext);\n  const [questions, setQuestions] = useState([]);\n  const [quizInfo, setQuizInfo] = useState([]);\n  const [point, setPoint] = useState(0);\n  const [currentQuest, setCurrentQuest] = useState(0);\n  const [quizTime, setQuizTime] = useState(false);\n  const [time, setTime] = useState(0);\n  const [progressBarInterval, setProgressBarInterval] = useState(0);\n  const progressBarWidth = useRef(100);\n  const progressBar = /*#__PURE__*/createRef();\n  const percentage = 100;\n\n  const shuffleArray = array => {\n    for (var i = array.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      var temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n\n    return array;\n  };\n\n  const getQuestions = async () => {};\n\n  const getQuizInfo = async () => {\n    let quizInfo = await axios.get(`/quiz/info/${id}`);\n    quizInfo = JSON.parse(quizInfo.request.response);\n    setQuizInfo(quizInfo[0]);\n    setQuizTime(quizInfo[0][\"quiz_time\"] != null);\n\n    if (quizInfo[0][\"quiz_time\"] != null) {\n      setTime(parseInt(quizInfo[0][\"quiz_time\"]));\n    }\n\n    let listOfQuestions = await axios.get(`/quiz/join/${id}`);\n    listOfQuestions = JSON.parse(listOfQuestions.request.response);\n\n    if (quizInfo[\"raw_order\"] == 0) {\n      listOfQuestions = shuffleArray(listOfQuestions);\n    }\n\n    setQuestions(listOfQuestions);\n  };\n\n  useEffect(() => {\n    if (quizInfo.length == 0) {\n      progressBarWidth.current = 100;\n      getQuizInfo();\n      getQuestions();\n    }\n\n    console.log(progressBarWidth.current);\n  }, []);\n  useEffect(() => {\n    if (currentQuest == 1) {\n      progressBarWidth.current = 100;\n      let progrssBarInterval = setInterval(() => {\n        progressBarWidth.current = progressBarWidth.current - 1;\n        percentage = progressBarWidth.current;\n        React.findDOMNode(this.refs.progressBar).setAttribute('now', progressBarWidth.current);\n\n        if (progressBarWidth.current == 0) {\n          clearInterval(progrssBarInterval);\n          progressBarWidth.current = 0;\n        }\n      }, 150);\n    }\n\n    if (currentQuest != 0 && currentQuest != 1 && quizTime) {\n      progressBarWidth.current = 100;\n      let progrssBarInterval = setInterval(() => {\n        progressBarWidth.current = progressBarWidth.current - 1;\n\n        if (progressBarWidth.current == 0) {\n          clearInterval(progrssBarInterval);\n          progressBarWidth.current.value = 0;\n        }\n      }, 150);\n    }\n  }, [currentQuest]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [questions.length == 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading Questions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 40\n    }, this), questions.length != 0 && /*#__PURE__*/_jsxDEV(Container, {\n      className: \"mt-3 mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center\",\n        children: quizInfo.quiz_title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          lg: 4,\n          md: 12,\n          sm: 12,\n          children: /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"text-center\",\n            children: user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          lg: 4,\n          md: 6,\n          sm: 12,\n          children: /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"text-center\",\n            children: [\"C\\xE2u h\\u1ECFi: \", currentQuest, \"/\", questions.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          lg: 4,\n          md: 6,\n          sm: 12,\n          children: /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"text-center\",\n            children: [\"\\u0110i\\u1EC3m: \", point]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"text-center\",\n        children: [\"Th\\u1EDDi gian: \", time]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress mb-2\",\n        children: /*#__PURE__*/_jsxDEV(ProgressBar, {\n          variant: \"info\",\n          striped: true,\n          ref: progressBar,\n          now: 100,\n          style: {\n            width: '100%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }, this), currentQuest == 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setCurrentQuest(1),\n          variant: \"info\",\n          className: \"text-white text-center\",\n          children: \"B\\u1EAFt \\u0111\\u1EA7u\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 25\n      }, this), currentQuest != 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-box d-flex justify-content-center align-items-center\",\n          children: /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: questions[currentQuest - 1].question_content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 25\n        }, this), questions[currentQuest - 1].media != \"\" && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: questions[currentQuest - 1].media\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 69\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n\n_s(QuizMain, \"/Uu5fLmW/UkmTQEJVgJu02Fhk4Y=\", false, function () {\n  return [useParams];\n});\n\n_c = QuizMain;\nexport default QuizMain;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuizMain\");","map":{"version":3,"sources":["D:/Coding/Quiz Generator Project/Client/online-quiz-system/src/pages/quiz-main/QuizMain.jsx"],"names":["React","useState","useEffect","useContext","useRef","createRef","axios","AuthContext","useParams","Row","Col","Container","ProgressBar","Button","CountdownCircleTimer","QuizMain","id","user","questions","setQuestions","quizInfo","setQuizInfo","point","setPoint","currentQuest","setCurrentQuest","quizTime","setQuizTime","time","setTime","progressBarInterval","setProgressBarInterval","progressBarWidth","progressBar","percentage","shuffleArray","array","i","length","j","Math","floor","random","temp","getQuestions","getQuizInfo","get","JSON","parse","request","response","parseInt","listOfQuestions","current","console","log","progrssBarInterval","setInterval","findDOMNode","refs","setAttribute","clearInterval","value","quiz_title","username","width","question_content","media"],"mappings":";;;AAAA,SAAQA,KAAR,EAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,UAApC,EAAgDC,MAAhD,EAAwDC,SAAxD,QAAwE,OAAxE;AACA,OAAO,gBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,QAA0B,2BAA1B;AACA,SACIC,SADJ,QAEO,kBAFP;AAGA,SAAQC,GAAR,EAAaC,GAAb,EAAkBC,SAAlB,EAA6BC,WAA7B,EAA0CC,MAA1C,QAAuD,iBAAvD;AACA,SAASC,oBAAT,QAAqC,8BAArC;;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAChB,MAAI;AAACC,IAAAA;AAAD,MAAOR,SAAS,EAApB;AACA,QAAM;AAACS,IAAAA;AAAD,MAASd,UAAU,CAACI,WAAD,CAAzB;AACA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BlB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACmB,QAAD,EAAWC,WAAX,IAA0BpB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACqB,KAAD,EAAQC,QAAR,IAAoBtB,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACuB,YAAD,EAAeC,eAAf,IAAkCxB,QAAQ,CAAC,CAAD,CAAhD;AACA,QAAM,CAACyB,QAAD,EAAWC,WAAX,IAA0B1B,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAAC2B,IAAD,EAAOC,OAAP,IAAkB5B,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAAC6B,mBAAD,EAAsBC,sBAAtB,IAAgD9B,QAAQ,CAAC,CAAD,CAA9D;AACA,QAAM+B,gBAAgB,GAAG5B,MAAM,CAAC,GAAD,CAA/B;AACA,QAAM6B,WAAW,gBAAG5B,SAAS,EAA7B;AACA,QAAM6B,UAAU,GAAG,GAAnB;;AAEA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC5B,SAAK,IAAIC,CAAC,GAAGD,KAAK,CAACE,MAAN,GAAe,CAA5B,EAA+BD,CAAC,GAAG,CAAnC,EAAsCA,CAAC,EAAvC,EAA2C;AACvC,UAAIE,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBL,CAAC,GAAG,CAArB,CAAX,CAAR;AACA,UAAIM,IAAI,GAAGP,KAAK,CAACC,CAAD,CAAhB;AACAD,MAAAA,KAAK,CAACC,CAAD,CAAL,GAAWD,KAAK,CAACG,CAAD,CAAhB;AACAH,MAAAA,KAAK,CAACG,CAAD,CAAL,GAAWI,IAAX;AACH;;AACD,WAAOP,KAAP;AACH,GARD;;AAUA,QAAMQ,YAAY,GAAG,YAAW,CAE/B,CAFD;;AAIA,QAAMC,WAAW,GAAG,YAAW;AAC3B,QAAIzB,QAAQ,GAAG,MAAMd,KAAK,CAACwC,GAAN,CAAW,cAAa9B,EAAG,EAA3B,CAArB;AACAI,IAAAA,QAAQ,GAAG2B,IAAI,CAACC,KAAL,CAAW5B,QAAQ,CAAC6B,OAAT,CAAiBC,QAA5B,CAAX;AACA7B,IAAAA,WAAW,CAACD,QAAQ,CAAC,CAAD,CAAT,CAAX;AACAO,IAAAA,WAAW,CAACP,QAAQ,CAAC,CAAD,CAAR,CAAY,WAAZ,KAA4B,IAA7B,CAAX;;AACA,QAAIA,QAAQ,CAAC,CAAD,CAAR,CAAY,WAAZ,KAA4B,IAAhC,EAAsC;AAClCS,MAAAA,OAAO,CAACsB,QAAQ,CAAC/B,QAAQ,CAAC,CAAD,CAAR,CAAY,WAAZ,CAAD,CAAT,CAAP;AACH;;AAED,QAAIgC,eAAe,GAAG,MAAM9C,KAAK,CAACwC,GAAN,CAAW,cAAa9B,EAAG,EAA3B,CAA5B;AACAoC,IAAAA,eAAe,GAAGL,IAAI,CAACC,KAAL,CAAWI,eAAe,CAACH,OAAhB,CAAwBC,QAAnC,CAAlB;;AACA,QAAI9B,QAAQ,CAAC,WAAD,CAAR,IAAyB,CAA7B,EAAgC;AAC5BgC,MAAAA,eAAe,GAAGjB,YAAY,CAACiB,eAAD,CAA9B;AACH;;AACDjC,IAAAA,YAAY,CAACiC,eAAD,CAAZ;AACH,GAfD;;AAiBAlD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIkB,QAAQ,CAACkB,MAAT,IAAmB,CAAvB,EAA0B;AACtBN,MAAAA,gBAAgB,CAACqB,OAAjB,GAA2B,GAA3B;AACAR,MAAAA,WAAW;AACXD,MAAAA,YAAY;AACf;;AACDU,IAAAA,OAAO,CAACC,GAAR,CAAYvB,gBAAgB,CAACqB,OAA7B;AACH,GAPQ,EAON,EAPM,CAAT;AASAnD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIsB,YAAY,IAAI,CAApB,EAAuB;AACnBQ,MAAAA,gBAAgB,CAACqB,OAAjB,GAA2B,GAA3B;AACA,UAAIG,kBAAkB,GAAGC,WAAW,CAAC,MAAM;AACvCzB,QAAAA,gBAAgB,CAACqB,OAAjB,GAA2BrB,gBAAgB,CAACqB,OAAjB,GAA2B,CAAtD;AACAnB,QAAAA,UAAU,GAAGF,gBAAgB,CAACqB,OAA9B;AACArD,QAAAA,KAAK,CAAC0D,WAAN,CAAkB,KAAKC,IAAL,CAAU1B,WAA5B,EAAyC2B,YAAzC,CAAsD,KAAtD,EAA6D5B,gBAAgB,CAACqB,OAA9E;;AACA,YAAIrB,gBAAgB,CAACqB,OAAjB,IAA4B,CAAhC,EAAmC;AAC/BQ,UAAAA,aAAa,CAACL,kBAAD,CAAb;AACAxB,UAAAA,gBAAgB,CAACqB,OAAjB,GAA2B,CAA3B;AACH;AACJ,OARmC,EAQjC,GARiC,CAApC;AASH;;AACD,QAAI7B,YAAY,IAAI,CAAhB,IAAqBA,YAAY,IAAI,CAArC,IAA0CE,QAA9C,EAAwD;AACpDM,MAAAA,gBAAgB,CAACqB,OAAjB,GAA2B,GAA3B;AACA,UAAIG,kBAAkB,GAAGC,WAAW,CAAC,MAAM;AACvCzB,QAAAA,gBAAgB,CAACqB,OAAjB,GAA2BrB,gBAAgB,CAACqB,OAAjB,GAA2B,CAAtD;;AACA,YAAIrB,gBAAgB,CAACqB,OAAjB,IAA4B,CAAhC,EAAmC;AAC/BQ,UAAAA,aAAa,CAACL,kBAAD,CAAb;AACAxB,UAAAA,gBAAgB,CAACqB,OAAjB,CAAyBS,KAAzB,GAAiC,CAAjC;AACH;AACJ,OANmC,EAMjC,GANiC,CAApC;AAOH;AACJ,GAvBQ,EAuBN,CAACtC,YAAD,CAvBM,CAAT;AAyBA,sBACI;AAAA,eACKN,SAAS,CAACoB,MAAV,IAAoB,CAApB,iBAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAD/B,EAEKpB,SAAS,CAACoB,MAAV,IAAoB,CAApB,iBACG,QAAC,SAAD;AAAW,MAAA,SAAS,EAAC,WAArB;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA,kBAA6BlB,QAAQ,CAAC2C;AAAtC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,EAAf;AAAA,gCACI,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,CAAT;AAAY,UAAA,EAAE,EAAE,EAAhB;AAAoB,UAAA,EAAE,EAAE,EAAxB;AAAA,iCACI;AAAI,YAAA,SAAS,EAAC,aAAd;AAAA,sBAA6B9C,IAAI,CAAC+C;AAAlC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,CAAT;AAAY,UAAA,EAAE,EAAE,CAAhB;AAAmB,UAAA,EAAE,EAAE,EAAvB;AAAA,iCACI;AAAI,YAAA,SAAS,EAAC,aAAd;AAAA,4CAAsCxC,YAAtC,OAAqDN,SAAS,CAACoB,MAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAOI,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,CAAT;AAAY,UAAA,EAAE,EAAE,CAAhB;AAAmB,UAAA,EAAE,EAAE,EAAvB;AAAA,iCACI;AAAI,YAAA,SAAS,EAAC,aAAd;AAAA,2CAAmChB,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAaI;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA,uCACgBM,IADhB;AAAA;AAAA;AAAA;AAAA;AAAA,cAbJ,eAgBI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,+BACI,QAAC,WAAD;AACI,UAAA,OAAO,EAAC,MADZ;AAEI,UAAA,OAAO,MAFX;AAGI,UAAA,GAAG,EAAEK,WAHT;AAII,UAAA,GAAG,EAAE,GAJT;AAKI,UAAA,KAAK,EAAE;AAACgC,YAAAA,KAAK,EAAE;AAAR;AALX;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAhBJ,eA0BI;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cA1BJ,EA6BKzC,YAAY,IAAI,CAAhB,iBACG;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,MAAMC,eAAe,CAAC,CAAD,CAAtC;AAA2C,UAAA,OAAO,EAAC,MAAnD;AAA0D,UAAA,SAAS,EAAC,wBAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cA9BR,EAkCKD,YAAY,IAAI,CAAhB,iBACG;AAAA,gCACA;AAAK,UAAA,SAAS,EAAC,+DAAf;AAAA,iCACI;AAAA,sBAAKN,SAAS,CAACM,YAAY,GAAG,CAAhB,CAAT,CAA4B0C;AAAjC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADA,EAIChD,SAAS,CAACM,YAAY,GAAG,CAAhB,CAAT,CAA4B2C,KAA5B,IAAqC,EAArC,iBAA2C;AAAK,UAAA,GAAG,EAAEjD,SAAS,CAACM,YAAY,GAAG,CAAhB,CAAT,CAA4B2C;AAAtC;AAAA;AAAA;AAAA;AAAA,gBAJ5C;AAAA,sBAnCR;AAAA;AAAA;AAAA;AAAA;AAAA,YAHR;AAAA,kBADJ;AAkDH;;GAjIQpD,Q;UACMP,S;;;KADNO,Q;AAmIT,eAAeA,QAAf","sourcesContent":["import {React, useState, useEffect, useContext, useRef, createRef} from 'react'\r\nimport \"./quizmain.css\";\r\nimport axios from \"axios\";\r\nimport {AuthContext} from \"../../context/AuthContext\";\r\nimport {\r\n    useParams\r\n} from \"react-router-dom\";\r\nimport {Row, Col, Container, ProgressBar, Button} from \"react-bootstrap\";\r\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer';\r\n\r\nfunction QuizMain() {\r\n    let {id} = useParams();\r\n    const {user} = useContext(AuthContext);\r\n    const [questions, setQuestions] = useState([]);\r\n    const [quizInfo, setQuizInfo] = useState([]);\r\n    const [point, setPoint] = useState(0);\r\n    const [currentQuest, setCurrentQuest] = useState(0);\r\n    const [quizTime, setQuizTime] = useState(false)\r\n    const [time, setTime] = useState(0);\r\n    const [progressBarInterval, setProgressBarInterval] = useState(0);\r\n    const progressBarWidth = useRef(100);\r\n    const progressBar = createRef();\r\n    const percentage = 100;\r\n\r\n    const shuffleArray = (array) => {\r\n        for (var i = array.length - 1; i > 0; i--) {\r\n            var j = Math.floor(Math.random() * (i + 1));\r\n            var temp = array[i];\r\n            array[i] = array[j];\r\n            array[j] = temp;\r\n        }\r\n        return array\r\n    }\r\n\r\n    const getQuestions = async() => {\r\n        \r\n    }\r\n\r\n    const getQuizInfo = async() => {\r\n        let quizInfo = await axios.get(`/quiz/info/${id}`);\r\n        quizInfo = JSON.parse(quizInfo.request.response);\r\n        setQuizInfo(quizInfo[0]);\r\n        setQuizTime(quizInfo[0][\"quiz_time\"] != null);\r\n        if (quizInfo[0][\"quiz_time\"] != null) {\r\n            setTime(parseInt(quizInfo[0][\"quiz_time\"]))\r\n        }\r\n\r\n        let listOfQuestions = await axios.get(`/quiz/join/${id}`);\r\n        listOfQuestions = JSON.parse(listOfQuestions.request.response);\r\n        if (quizInfo[\"raw_order\"] == 0) {\r\n            listOfQuestions = shuffleArray(listOfQuestions);\r\n        }\r\n        setQuestions(listOfQuestions);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (quizInfo.length == 0) {\r\n            progressBarWidth.current = 100;\r\n            getQuizInfo();\r\n            getQuestions();\r\n        }\r\n        console.log(progressBarWidth.current);\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (currentQuest == 1) {\r\n            progressBarWidth.current = 100;\r\n            let progrssBarInterval = setInterval(() => {\r\n                progressBarWidth.current = progressBarWidth.current - 1;\r\n                percentage = progressBarWidth.current;\r\n                React.findDOMNode(this.refs.progressBar).setAttribute('now', progressBarWidth.current) \r\n                if (progressBarWidth.current == 0) {\r\n                    clearInterval(progrssBarInterval);\r\n                    progressBarWidth.current = 0;\r\n                }\r\n            }, 150);\r\n        } \r\n        if (currentQuest != 0 && currentQuest != 1 && quizTime) {\r\n            progressBarWidth.current = 100;\r\n            let progrssBarInterval = setInterval(() => {\r\n                progressBarWidth.current = progressBarWidth.current - 1;\r\n                if (progressBarWidth.current == 0) {\r\n                    clearInterval(progrssBarInterval);\r\n                    progressBarWidth.current.value = 0;\r\n                }\r\n            }, 150);\r\n        }\r\n    }, [currentQuest])\r\n\r\n    return (\r\n        <>\r\n            {questions.length == 0 && (<p>Loading Questions</p>)}\r\n            {questions.length != 0 && (\r\n                <Container className=\"mt-3 mb-3\">\r\n                    <h1 className=\"text-center\">{quizInfo.quiz_title}</h1>\r\n                    <Row className=\"\">\r\n                        <Col lg={4} md={12} sm={12}>\r\n                            <h5 className=\"text-center\">{user.username}</h5>\r\n                        </Col>\r\n                        <Col lg={4} md={6} sm={12}>\r\n                            <h5 className=\"text-center\">Câu hỏi: {currentQuest}/{questions.length}</h5>\r\n                        </Col>\r\n                        <Col lg={4} md={6} sm={12}>\r\n                            <h5 className=\"text-center\">Điểm: {point}</h5>\r\n                        </Col>\r\n                    </Row>\r\n                    <h5 className=\"text-center\">\r\n                        Thời gian: {time}\r\n                    </h5>\r\n                    <div className=\"progress mb-2\">\r\n                        <ProgressBar \r\n                            variant=\"info\"\r\n                            striped \r\n                            ref={progressBar}\r\n                            now={100}\r\n                            style={{width: '100%'}}\r\n                        ></ProgressBar>\r\n                        \r\n                    </div>\r\n                    <div className=\"text-center\">\r\n                        \r\n                    </div>\r\n                    {currentQuest == 0 && (\r\n                        <div className=\"text-center\">\r\n                            <Button onClick={() => setCurrentQuest(1)} variant=\"info\" className=\"text-white text-center\">Bắt đầu</Button>\r\n                        </div>\r\n                    )}\r\n                    {currentQuest != 0 && \r\n                        <>\r\n                        <div className=\"question-box d-flex justify-content-center align-items-center\">\r\n                            <h5>{questions[currentQuest - 1].question_content}</h5>\r\n                        </div>\r\n                        {questions[currentQuest - 1].media != \"\" && <img src={questions[currentQuest - 1].media}></img>}\r\n                        </>\r\n                    }\r\n                </Container>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default QuizMain\r\n"]},"metadata":{},"sourceType":"module"}